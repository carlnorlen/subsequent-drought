q()
p <- c("RSQLite","dbplyr","ggplot2","dplyr","tidyr", "ggpubr", "RColorBrewer",
'gt', 'gtsummary', 'webshot', 'kableExtra', 'broom', 'rFIA', 'sf', 'grid', 'gridExtra')
# install.packages("rFIA")
# Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
setwd('C:/Users/can02/mystuff/subsequent-drought')
#Add Data Sets
fiaCA <- 'D:\\Large_Files\\FIA\\SQLite_FIADB_CA\\2019_CSV' #Downloaedd from FIA DataMart
dir_usfs <- "D:\\Large_Files\\USFS\\data\\subsections"
# fiaCA <- file.path(sql_dir, 'FIADB_CA.db')
ca <- readFIA(fiaCA)
tpa.dia.both.all.2002 <- tpa(ca, treeType = 'live', byPlot = TRUE, bySpecies = TRUE, bySizeClass = TRUE, treeList = TRUE,
treeDomain = INVYR %in% c("2002", "2003", "2004", "2005", "2006") & DIA >= 5,
areaDomain = ECOSUBCD %in% c('M262Bd','M262Be','M262Bg','M262Bh','M262Bf','M262Bo','M262Bi','M262Bm','M262Bl','M262Bc','M262Bp','M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa.dia.both.all.2002
summary(tpa.dia.both.all.2002)
tpa.dia.both.all.2002 <- tpa(ca, treeType = 'live', bySpecies = TRUE, bySizeClass = TRUE, treeList = TRUE,
treeDomain = INVYR %in% c("2002", "2003", "2004", "2005", "2006") & DIA >= 5,
areaDomain = ECOSUBCD %in% c('M262Bd','M262Be','M262Bg','M262Bh','M262Bf','M262Bo','M262Bi','M262Bm','M262Bl','M262Bc','M262Bp','M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
summary(tpa.dia.both.all.2002)
tpa.dia.both.all.2002 <- tpa(ca, treeType = 'live', bPlot = TRUE, bySpecies = TRUE, bySizeClass = TRUE, # treeList = TRUE,
treeDomain = INVYR %in% c("2002", "2003", "2004", "2005", "2006") & DIA >= 5,
areaDomain = ECOSUBCD %in% c('M262Bd','M262Be','M262Bg','M262Bh','M262Bf','M262Bo','M262Bi','M262Bm','M262Bl','M262Bc','M262Bp','M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
summary(tpa.dia.both.all.2002)
tpa.dia.both.all.2002 <- tpa(ca, treeType = 'live', byPlot = TRUE, bySpecies = TRUE, bySizeClass = TRUE, # treeList = TRUE,
treeDomain = INVYR %in% c("2002", "2003", "2004", "2005", "2006") & DIA >= 5,
areaDomain = ECOSUBCD %in% c('M262Bd','M262Be','M262Bg','M262Bh','M262Bf','M262Bo','M262Bi','M262Bm','M262Bl','M262Bc','M262Bp','M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
summary(tpa.dia.both.all.2002)
tpa.dia.both.all.2002 <- tpa(ca, treeType = 'live', byPlot = TRUE, bySpecies = TRUE, bySizeClass = TRUE, grpBy = DIA,# treeList = TRUE,
treeDomain = INVYR %in% c("2002", "2003", "2004", "2005", "2006") & DIA >= 5,
areaDomain = ECOSUBCD %in% c('M262Bd','M262Be','M262Bg','M262Bh','M262Bf','M262Bo','M262Bi','M262Bm','M262Bl','M262Bc','M262Bp','M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
summary(tpa.dia.both.all.2002)
View(tpa.dia.both.all.2002)
install.packages("gstat")
p <- c('dplyr','tidyr','ggplot2','ggpubr','segmented', 'patchwork','RColorBrewer','gt', 'gtsummary',
'webshot', 'kableExtra', 'broom', 'ggpmisc', 'relaimpo', 'mlr', 'caret', 'stats', 'purrr', 'gstat')
#Install a package
# install.packages("gstat")
#Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
setwd('C:/Users/can02/mystuff/subsequent-drought')
dir_in <- "D:\\Large_Files\\Landsat"
all.ca <- read.csv(file.path(dir_in, "Regression_all_socal_300m_v23.csv"))
#Calculate the difference between SPI48 2002 and SPI48 2015
all.ca$dSPI48 <- abs(all.ca$spi48_09_2015 - all.ca$spi48_09_2002)
#Adding a drought sequence column to the data set
all.ca <- all.ca %>% mutate(drought.sequence = case_when((spi48_09_2002 <= -1.5) & (spi48_09_2015 <= -1.5) & (dSPI48 <= 0.5) ~ 'Both Droughts',
(spi48_09_2015 <= -1.5) & (spi48_09_2002 > spi48_09_2015) & (spi48_09_2002 > -1.5) & (dSPI48 > 0.5) ~ '2012-2015 Only',
(spi48_09_2002) <= -1.5 & (spi48_09_2002 < spi48_09_2015) & (spi48_09_2015 > -1.5) & (dSPI48 > 0.5) ~ '1999-2002 Only'))
#Select columns of data
all.ca.1stDrought <- dplyr::select(all.ca, c(system.index, NDMI_1999, dNDMI_2004, dET_2004, dBiomass_2004, PET_4yr_2002, ppt_4yr_2002, tmax_4yr_2002, ET_4yr_2002, ET_1999, biomass_1999, ADS_2004, spi48_09_2002, elevation, latitude, longitude, USFS_zone, drought.sequence))
#Add the year of the 1999-2002 data
all.ca.1stDrought$drought <- '1999-2002'
#Rename the columns
colnames(all.ca.1stDrought) <- c('pixel.id','NDMI', 'dNDMI', 'dET', 'dBiomass', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'ET', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence', 'drought')
#Select columns of the 2012-2015 data
all.ca.2ndDrought <- dplyr::select(all.ca, c(system.index, NDMI_2012, dNDMI_2017, dET_2017, dBiomass_2017, PET_4yr_2015, ppt_4yr_2015, tmax_4yr_2015, ET_4yr_2015, ET_2012, biomass_2012, ADS_2017, spi48_09_2015, elevation, latitude, longitude, USFS_zone, drought.sequence))
#Add the year of the 2012-2015 data
all.ca.2ndDrought$drought <- '2012-2015'
colnames(all.ca.2ndDrought) <- c('pixel.id', 'NDMI', 'dNDMI', 'dET', 'dBiomass', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'ET', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence','drought')
#Combine all the data in one data frame
all.ca.combined <- rbind(all.ca.1stDrought, all.ca.2ndDrought)
all.ca
all.ca.1stDrought <- dplyr::select(all.ca, c(system.index, NDMI_1999, dNDMI_2004, dET_2004, dBiomass_2004, PET_4yr_2002, ppt_4yr_2002, tmax_4yr_2002, ET_4yr_2002, ET_1999, biomass_1999, ADS_2004, spi48_09_2002, elevation, latitude, longitude, USFS_zone, drought.sequence, .geo))
#Add the year of the 1999-2002 data
all.ca.1stDrought$drought <- '1999-2002'
#Rename the columns
colnames(all.ca.1stDrought) <- c('pixel.id','NDMI', 'dNDMI', 'dET', 'dBiomass', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'ET', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence', 'drought', 'xy')
#Select columns of the 2012-2015 data
all.ca.2ndDrought <- dplyr::select(all.ca, c(system.index, NDMI_2012, dNDMI_2017, dET_2017, dBiomass_2017, PET_4yr_2015, ppt_4yr_2015, tmax_4yr_2015, ET_4yr_2015, ET_2012, biomass_2012, ADS_2017, spi48_09_2015, elevation, latitude, longitude, USFS_zone, drought.sequence, .geo))
#Add the year of the 2012-2015 data
all.ca.2ndDrought$drought <- '2012-2015'
#Rename the columns
colnames(all.ca.2ndDrought) <- c('pixel.id', 'NDMI', 'dNDMI', 'dET', 'dBiomass', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'ET', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence','drought', 'xy')
#Combine all the data in one data frame
all.ca.combined <- rbind(all.ca.1stDrought, all.ca.2ndDrought)
spdf <- SpatialPointsDataFrame(xy, data=all.ca.combined)
#Load packages
lapply(p,require,character.only=TRUE)
spdf <- SpatialPointsDataFrame(xy, data=all.ca.combined)
spdf <- sp::SpatialPointsDataFrame(xy, data=all.ca.combined)
spdf <- sp::SpatialPointsDataFrame('xy', data=all.ca.combined)
#Testing out a spatial data.frame
all.ca.combined
#Testing out a spatial data.frame
all.ca.combined$xy
all.ca.1stDrought <- dplyr::select(all.ca, c(system.index, NDMI_1999, dNDMI_2004, dET_2004, dBiomass_2004, PET_4yr_2002, ppt_4yr_2002, tmax_4yr_2002, ET_4yr_2002, ET_1999, biomass_1999, ADS_2004, spi48_09_2002, elevation, latitude, longitude, USFS_zone, drought.sequence, .geo))
#Add the year of the 1999-2002 data
all.ca.1stDrought$drought <- '1999-2002'
#Rename the columns
colnames(all.ca.1stDrought) <- c('pixel.id','NDMI', 'dNDMI', 'dET', 'dBiomass', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'ET', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence', 'xy', 'drought')
#Select columns of the 2012-2015 data
all.ca.2ndDrought <- dplyr::select(all.ca, c(system.index, NDMI_2012, dNDMI_2017, dET_2017, dBiomass_2017, PET_4yr_2015, ppt_4yr_2015, tmax_4yr_2015, ET_4yr_2015, ET_2012, biomass_2012, ADS_2017, spi48_09_2015, elevation, latitude, longitude, USFS_zone, drought.sequence, .geo))
#Add the year of the 2012-2015 data
all.ca.2ndDrought$drought <- '2012-2015'
#Rename the columns
colnames(all.ca.2ndDrought) <- c('pixel.id', 'NDMI', 'dNDMI', 'dET', 'dBiomass', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'ET', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence', 'xy','drought')
#Combine all the data in one data frame
all.ca.combined <- rbind(all.ca.1stDrought, all.ca.2ndDrought)
#Testing out a spatial data.frame
all.ca.combined$xy
spdf <- sp::SpatialPointsDataFrame('xy', data=all.ca.combined)
spdf <- sp::SpatialPointsDataFrame(xy, data=all.ca.combined)
#Load packages
lapply(p,require,character.only=TRUE)
c <- crs("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
#Read in a raster of general WGS 84 crs in PROJ4 code format
wg <- crs("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0")
# all.ca.combined$xy
# spdf <- sp::SpatialPointsDataFrame(xy, data=all.ca.combined)
my.sf.point <- st_as_sf(x = all.ca.combined,
coords = c("longitude", "latitude"),
crs = c)
p <- c('dplyr','tidyr','ggplot2','ggpubr','segmented', 'patchwork','RColorBrewer','gt', 'gtsummary',
'webshot', 'kableExtra', 'broom', 'ggpmisc', 'relaimpo', 'mlr', 'caret', 'stats', 'purrr', 'gstat',
'sp', 'raster', 'sf', 'rgdal')
#Load packages
lapply(p,require,character.only=TRUE)
c <- crs("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
#Read in a raster of general WGS 84 crs in PROJ4 code format
wg <- crs("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0")
# all.ca.combined$xy
# spdf <- sp::SpatialPointsDataFrame(xy, data=all.ca.combined)
my.sf.point <- st_as_sf(x = all.ca.combined,
coords = c("longitude", "latitude"),
crs = c)
vario <- variogram(resp~1, data=my.sf.point, locations= ~x+y,
cutoff=0.5*gridDim)
plot(vario$dist, vario$gamma)
vario <- variogram(resp~1, data=all.ca.combined, locations= ~longitude+latitude,
cutoff=0.5*gridDim)
vario <- variogram(dNDMI~1, data=all.ca.combined, locations= ~longitude+latitude,
cutoff=0.5*gridDim)
vario <- variogram(dNDMI~1, data=all.ca.combined, locations= ~longitude+latitude)
gridDim <- 300
vario <- variogram(dNDMI~1, data=all.ca.combined, locations= ~longitude+latitude,
cutoff=0.5*gridDim)
plot(vario$dist, vario$gamma)
View(my.sf.point)
vario <- variogram(dNDMI~1, data=my.sf.point, locations= ~geometry,
cutoff=0.5*gridDim)
coordinates(my.sf.point) <- my.sf.point$geometry
coordinates(all.ca.combined) <- ~longitude + latitude
vario <- variogram(dNDMI~1, data=all.ca.combined, locations= ~longitude + latitude,
cutoff=0.5*gridDim)
vario <- variogram(dNDMI~1, data=all.ca.combined,
cutoff=0.5*gridDim)
plot(vario$dist, vario$gamma)
plot(vario$dist, vario$gamma, map = TRUE)
vario <- variogram(dNDMI~PET_4yr, data=all.ca.combined,
cutoff=0.5*gridDim)
warnings()
plot(vario$dist, vario$gamma)
ssplot(all.ca.combined[dNDMI])
plot(all.ca.combined[dNDMI])
all.ca.combined
sp::ssplot(all.ca.combined, c('dNDMI'))
sp::spplot(all.ca.combined, c('dNDMI'))
p <- c('dplyr','tidyr','ggplot2','ggpubr','segmented', 'patchwork','RColorBrewer','gt', 'gtsummary',
'webshot', 'kableExtra', 'broom', 'ggpmisc', 'relaimpo', 'mlr', 'caret', 'stats', 'purrr', 'gstat',
'sp', 'raster', 'sf', 'rgdal', 'automap')
#Install a package
# install.packages("gstat")
#Load packages
lapply(p,require,character.only=TRUE)
#Install a package
install.packages("automap")
p <- c('dplyr','tidyr','ggplot2','ggpubr','segmented', 'patchwork','RColorBrewer','gt', 'gtsummary',
'webshot', 'kableExtra', 'broom', 'ggpmisc', 'relaimpo', 'mlr', 'caret', 'stats', 'purrr', 'gstat',
'sp', 'raster', 'sf', 'rgdal', 'automap')
#Install a package
install.packages("automap")
#Load packages
# lapply(p,require,character.only=TRUE)
#Set working directory
setwd('C:/Users/can02/mystuff/subsequent-drought')
vario <- autofitVariogram(dNDMI~PET_4yr, data=all.ca.combined)
vario <- automap::autofitVariogram(dNDMI~PET_4yr, data=all.ca.combined)
vario <- automap::autofitVariogram(formula = dNDMI~PET_4yr, input_data=all.ca.combined)
#   variogram(dNDMI~PET_4yr, data=all.ca.combined,
#                    cutoff=0.5*gridDim)
# warnings()
plot(vario$dist, vario$gamma)
#   variogram(dNDMI~PET_4yr, data=all.ca.combined,
#                    cutoff=0.5*gridDim)
# warnings()
fit.variogram(vario)
#   variogram(dNDMI~PET_4yr, data=all.ca.combined,
#                    cutoff=0.5*gridDim)
# warnings()
vario
ggplot(data = vario, mapping = aes(x = dist, y = gamma)) + geom_point()
ggplot(data = as.data.frame(vario), mapping = aes(x = dist, y = gamma)) + geom_point()
#   variogram(dNDMI~PET_4yr, data=all.ca.combined,
#                    cutoff=0.5*gridDim)
# warnings()
as.data.frame(vario)
ggplot(data = as.data.frame(vario), mapping = aes(x = exp_var.dist, y = exp_var.gamma)) + geom_point()
ggplot(data = as.data.frame(vario) %>% filter(exp_var.model == 'Ste'), mapping = aes(x = exp_var.dist, y = exp_var.gamma)) + geom_point()
ggplot(data = as.data.frame(vario) %>% filter(var_model.model == 'Ste'), mapping = aes(x = exp_var.dist, y = exp_var.gamma)) + geom_point()
ggplot(data = as.data.frame(vario) %>% filter(var_model.model == 'Nug'), mapping = aes(x = exp_var.dist, y = exp_var.gamma)) + geom_point()
ggplot(data = as.data.frame(vario) %>% filter(var_model.model == 'Ste'), mapping = aes(x = exp_var.dist, y = exp_var.gamma)) + geom_point()
ggplot(data = as.data.frame(vario) %>% filter(var_model.model == 'Ste'), mapping = aes(x = exp_var.dist, y = exp_var.gamma)) + geom_point() + ylim(c(0,1))
v = variogram(dNDMI~1, all.ca.combined)
v.fit = fit.variogram(v, vgm(1, "Sph", 900, 1))
v.fit = fit.variogram(v, vgm(1, "Sph", 100, 1))
plot(v)
plot(v$gamma, v$distance)
plot(v$distance, v$gamma)
v
plot()
plot(v)
crs(v) <- c
crs(all.ca.combined) <- c
# vario <- automap::autofitVariogram(formula = dNDMI~PET_4yr, input_data=all.ca.combined)
v = variogram(dNDMI~1, all.ca.combined)
# crs(v) <- c
# v.fit = fit.variogram(v, vgm(1, "Sph", 100, 1))
plot(v)
# crs(v) <- c
# v.fit = fit.variogram(v, vgm(1, "Sph", 100, 1))
v
#   variogram(dNDMI~PET_4yr, data=all.ca.combined,
#                    cutoff=0.5*gridDim)
# warnings()
as.data.frame(v)
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point()
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point() + ylim(c(0, 0.1))
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point() + ylim(c(0, 0.01))
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point() + ylim(c(0, 0.003))
# vario <- automap::autofitVariogram(formula = dNDMI~PET_4yr, input_data=all.ca.combined)
v = variogram(dNDMI~1, all.ca.combined, width = 1)
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point() + ylim(c(0, 0.003))
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point())
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point()
# vario <- automap::autofitVariogram(formula = dNDMI~PET_4yr, input_data=all.ca.combined)
v = variogram(dNDMI~1, all.ca.combined, width = 30)
crs(all.ca.combined) <- wg
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point()
# vario <- automap::autofitVariogram(formula = dNDMI~PET_4yr, input_data=all.ca.combined)
v = variogram(dNDMI~1, all.ca.combined)
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point()
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point() + xlim(c(0, 1))
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point() + ylim(c(0, 1))
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point() + ylim(c(0, 0.03))
ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point() + ylim(c(0, 0.003))
coordinates(all.ca.combined) <- ~longitude + latitude
crs(all.ca.combined)
#Combine all the data in one data frame
all.ca.combined <- rbind(all.ca.1stDrought, all.ca.2ndDrought)
#Set the coordinates for the data frame
coordinates(all.ca.combined) <- ~longitude + latitude
crs(all.ca.combined)
# vario <- automap::autofitVariogram(formula = dNDMI~PET_4yr, input_data=all.ca.combined)
v = variogram(dNDMI~1, all.ca.combined, projected = FALSE)
sp::spplot(all.ca.combined, c('dNDMI'))
crs(all.ca.combined) <- wg
sp::spplot(all.ca.combined, c('dNDMI'))
# vario <- automap::autofitVariogram(formula = dNDMI~PET_4yr, input_data=all.ca.combined)
v = variogram(dNDMI~1, all.ca.combined)
