# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_line(data = sev.pixel.data %>%
filter(stand.age >= -5 & stand.age <= 12 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
sev.bin == 'Low' ~ stratlayer %in% lo.strat,
sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover[treatment == 'Disturb']) - mean(Tree_Cover[treatment == 'Control'])),
mapping = aes(x = stand.age, y = Tree_Cover.mean), size = 1) +
#Tree Cover 95% CI
geom_errorbar(data = sev.pixel.data %>%
filter(stand.age >= -5 & stand.age <= 12 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
sev.bin == 'Low' ~ stratlayer %in% lo.strat,
sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover[treatment == 'Disturb']) - mean(Tree_Cover[treatment == 'Control']),
Tree_Cover.sd = sd(Tree_Cover[treatment == 'Disturb'])^2 + sd(Tree_Cover[treatment == 'Control'])^2,
Tree_Cover.n = n()),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / Tree_Cover.n),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / Tree_Cover.n),
x = stand.age)) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') + facet_grid(. ~ sev.bin) +
scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Tree Reduction (%)')) + xlab('Years Since Fire')
p19
#Save the data
ggsave(filename = 'Fig9c_sev_stand_age_tree_cover.png', height=12, width= 20, units = 'cm', dpi=900)
p <- c("RSQLite","dbplyr","ggplot2","dplyr","tidyr", "ggpubr", "RColorBrewer",
'gt', 'gtsummary', 'webshot', 'kableExtra', 'broom', 'rFIA', 'sf', 'grid', 'gridExtra', 'purrr')
# install.packages("rFIA")
# Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
setwd('C:/Users/can02/mystuff/subsequent-drought')
#Add Data Sets
fiaCA <- 'D:\\Large_Files\\FIA\\SQLite_FIADB_CA\\2019_CSV' #Downloaedd from FIA DataMart
dir_usfs <- "D:\\Large_Files\\USFS\\data\\subsections"
#Load teh FIA data
ca <- readFIA(fiaCA)
#Creating a plot of mortality by tree species in two time periods and drought sequences.
#Create a notin operator
`%notin%` <- Negate(`%in%`)
#Possible way to deal with non-conifer forests
forest.names <- ca$REF_FOREST_TYPE
forest.names$FORTYPCD <- forest.names$VALUE
##Both Droughts regions estimates
#Doing a combined estimated of the Basal Area for Both Droughts during 1999-2002
#Total basal area and tpa estimates by species
tpa.both.all.2002 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = TRUE, treeDomain = INVYR %in% c("2003", "2004", "2005", "2006") & DIA >= 5,
areaDomain = ECOSUBCD %in% c('M262Bd','M262Be','M262Bg','M262Bh','M262Bf','M262Bo','M262Bi','M262Bm','M262Bl','M262Bc','M262Bp','M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.both.mort.2002 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = TRUE, treeDomain = DIA >= 5 & INVYR %in% c("2003", "2004", "2005", "2006"),
areaDomain = ECOSUBCD %in% c('M262Bd','M262Be','M262Bg','M262Bh','M262Bf','M262Bo','M262Bi','M262Bm','M262Bl','M262Bc','M262Bp','M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Combine multiple inventory years into one plot estimate
tpa.both.mort.2002 <- tpa.both.mort.2002 %>% dplyr::select(pltID, YEAR, COMMON_NAME, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
join.both.2002 <- left_join(tpa.both.all.2002, tpa.both.mort.2002, by = c('pltID', 'YEAR','COMMON_NAME'))
#Replace the NAs with 0s
join.both.2002 <- join.both.2002 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
#Doing a combined estimated of the Basal Area for Both Droughts during 2012-2015
#Total basal area and tpa estimates by species
tpa.both.all.2015 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = TRUE, treeDomain = INVYR %in% c("2016", "2017", "2018", "2019") & DIA >= 5,
areaDomain = ECOSUBCD %in% c('M262Bd','M262Be','M262Bg','M262Bh','M262Bf','M262Bo','M262Bi','M262Bm','M262Bl','M262Bc','M262Bp','M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.both.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = TRUE, treeDomain = INVYR %in% c("2016", "2017", "2018", "2019") &
DIA >= 5 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"), #%notin% c("2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012"),
areaDomain = ECOSUBCD %in% c('M262Bd','M262Be','M262Bg','M262Bh','M262Bf','M262Bo','M262Bi','M262Bm','M262Bl','M262Bc','M262Bp','M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Combine multiple inventory years into one plot estimate
tpa.both.mort.2015 <- tpa.both.mort.2015 %>% dplyr::select(pltID, YEAR, COMMON_NAME, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
join.both.2015 <- left_join(tpa.both.all.2015, tpa.both.mort.2015, by = c('pltID', 'YEAR','COMMON_NAME'))
#Replace the NAs with 0s
join.both.2015 <- join.both.2015 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
#Combine the 1999-2002 and 2012-2015 plots values
join.both.2002$time.period <- '1999-2002'
join.both.2015$time.period <- '2012-2015'
all.both <- rbind(join.both.2002, join.both.2015)
all.both
# all.both <- all.both %>% factor('COMMON_NAME', levels = sp.levels)
##2012-2015 Only regions estimates
#Doing a combined estimated of the Basal Area for Both Droughts during 1999-2002
#Total basal area and tpa estimates by species
tpa.second.all.2002 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = TRUE, treeDomain = INVYR %in% c("2003", "2004", "2005", "2006") & DIA >= 5, #Try removing 2002
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo' ,'M262Bb' ,'M262Ba') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.second.mort.2002 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = TRUE, treeDomain = DIA >= 5 & MORTYR != '' & INVYR %in% c("2003", "2004", "2005", "2006"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo' ,'M262Bb' ,'M262Ba') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Combine multiple inventory years into one plot estimate
tpa.second.mort.2002 <- tpa.second.mort.2002 %>% dplyr::select(pltID, YEAR, COMMON_NAME, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
join.second.2002 <- left_join(tpa.second.all.2002, tpa.second.mort.2002, by = c('pltID', 'YEAR','COMMON_NAME'))
#Replace the NAs with 0s
join.second.2002 <- join.second.2002 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
#Doing a combined estimated of the Basal Area for Both Droughts during 2012-2015
#Total basal area and tpa estimates by species
tpa.second.all.2015 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = TRUE, treeDomain = INVYR %in% c("2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 5, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo' ,'M262Bb' ,'M262Ba') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.second.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = TRUE, treeDomain = INVYR %in% c("2016", "2017", "2018", "2019") &
DIA >= 5 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo' ,'M262Bb' ,'M262Ba') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Combine multiple inventory years into one plot estimate
tpa.second.mort.2015 <- tpa.second.mort.2015 %>% dplyr::select(pltID, YEAR, COMMON_NAME, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
join.second.2015 <- left_join(tpa.second.all.2015, tpa.second.mort.2015, by = c('pltID', 'YEAR','COMMON_NAME'))
#Replace the NAs with 0s
join.second.2015 <- join.second.2015 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
#Combine the 1999-2002 and 2012-2015 plots values
join.second.2002$time.period <- '1999-2002'
join.second.2015$time.period <- '2012-2015'
all.second <- rbind(join.second.2002, join.second.2015)
#Combine all the all the data together for drought regions
all.both$sequence <- 'Both Droughts'
all.second$sequence <- '2nd Drought Only'
all.forest <- rbind(all.both, all.second)
#Try to do a mortality without tree species analysis
##Both Droughts regions estimates
#Doing a combined estimated of the Basal Area for Both Droughts during 1999-2002
#Total basal area and tpa estimates by species
all.forest$tree_type <- recode(.x=all.forest$COMMON_NAME, 'California black oak' = 'oak', 'California juniper' = 'juniper', 'California live oak' = 'oak', 'California sycamore' = 'deciduous', 'Coulter pine' = 'pine', 'chinkapin oak' = 'oak', 'Jeffrey pine' = 'pine',
'bigcone Douglas-fir' = 'fir', 'bigleaf maple' = 'deciduous', 'canyon live oak' = 'oak', 'curlleaf mountain-mahogany' = 'deciduous', 'incense-cedar' = 'cedar', 'interior live oak' = 'oak', 'limber pine' = 'pine',
'lodgepole pine' = 'pine', 'ponderosa pine' = 'pine', 'singleleaf pinyon' = 'pine', 'sugar pine' = 'pine', 'Utah juniper' = 'juniper', 'western juniper' = 'juniper', 'white alder' = 'deciduous', 'white fir' = 'fir', 'California laurel' = 'deciduous',
'California-laurel' = 'deciduous', 'Oregon ash' = 'deciduous', 'Douglas-fir' = 'fir', 'honey mesquite' = 'deciduous', 'desert ironwood' = 'deciduous', 'California red fir' = 'fir', 'California buckeye' = 'deciduous', 'Engelmann oak' = 'oak', 'grand fir' = 'fir', 'western white pine' = 'pine',
"western white pine" = 'pine', "whitebark pine" = 'pine', "mountain hemlock" = "other conifer", "gray or California foothill pine" = "pine", "foxtail pine" = 'pine', "blue oak" = 'oak', "California white oak" = 'oak', "quaking aspen" = 'deciduous',
"giant sequoia" = 'other conifer', "Unknown dead conifer" = 'unknown conifer', "ash spp." = 'deciduous', "black cottonwood" = 'deciduous', "California torreya (nutmeg)" = 'deciduous', "Oregon white oak" = 'oak', "Port-Orford-cedar" = 'cedar', "Pacific dogwood" = 'deciduous')
#Convert units for Basal area
all.forest$BAA.dead <- all.forest$BAA.dead * (1/4.356)
all.forest$BAA <- all.forest$BAA * (1/4.356)
#Calculate total Basal Area
all.forest$BAA.all<- all.forest$BAA + all.forest$BAA.dead
#Make tree type a factor so that I can fill in missing combinations
all.forest$tree_type <- as.factor(all.forest$tree_type)
all.forest.type <- all.forest %>% group_by(pltID, time.period, sequence, tree_type, .drop = FALSE) %>%
summarize(BAA.all.sum = sum(BAA.all), BAA.live.sum = sum(BAA), BAA.dead.sum = sum(BAA.dead)) #%>%
#Calculate the percent mortality rate
all.forest.type$BAA.mort <- all.forest.type$BAA.dead.sum / (all.forest.type$BAA.all.sum) * 100
#Summarize the data by forest type
all.forest.type.summary <- all.forest.type %>% mutate(live = case_when(BAA.all.sum > 0 ~ 1, BAA.all.sum == 0 ~ 0),
dead = case_when(BAA.mort > 0 ~ 1, BAA.mort == 0 | is.na(BAA.mort) ~ 0)) %>%
group_by(tree_type, time.period, sequence) %>% summarize(BAA.all.mean = mean(BAA.all.sum), BAA.all.sd = sd(BAA.all.sum),
BAA.live.mean = mean(BAA.live.sum), BAA.live.sd = sd(BAA.live.sum),
BAA.dead.mean = mean(BAA.dead.sum), BAA.dead.sd = sd(BAA.dead.sum),
BAA.mort.mean = mean(BAA.mort), BAA.mort.sd = sd(BAA.mort), count = n(),
live.count = sum(live), dead.count = sum(dead))
#Calculate the conifer fraction to eliminate forest with no conifers from the sample
all.summary <- all.forest %>% group_by(time.period, sequence, pltID) %>% summarize(BAA.all = sum(BAA.all), BAA.live = sum(BAA), BAA.dead.sum = sum(BAA.dead), BAA.mort = sum(BAA.dead) / sum(BAA.all) * 100)
#Summarize the data on conifers per plot
conifer.summary <- all.forest %>% filter(tree_type %in% c('pine', 'fir', 'juniper', 'cedar', 'other conifer')) %>%
group_by(time.period, sequence, pltID) %>% summarize(BAA.all.conifer = sum(BAA.all), BAA.live.conifer = sum(BAA), BAA.dead.conifer = sum(BAA.dead))
#Join the overall and conifer summaries
join.summary <- left_join(all.summary, conifer.summary, by = c('pltID', 'time.period', 'sequence'))
#Calculate the conifer fraction (with Basal Area)
join.summary$conifer.frac <- join.summary$BAA.all.conifer / join.summary$BAA.all * 100
#Figure out which plots have 5% or greater conifer fraction
plots <- join.summary %>% filter(conifer.frac >= 5) %>% ungroup() %>% pull(pltID) %>% unique()
#Do a summary for plots with at least 5% conifer fraction
all.forest.type %>% filter(pltID %in% plots)
conifer.forest.type.summary <- all.forest.type %>% filter(pltID %in% plots) %>%
mutate(live = case_when(BAA.all.sum > 0 ~ 1, BAA.all.sum == 0 ~ 0),
dead = case_when(BAA.mort > 0 ~ 1, BAA.mort == 0 | is.na(BAA.mort) ~ 0)) %>%
group_by(tree_type, time.period, sequence) %>% summarize(BAA.all.mean = mean(BAA.all.sum), BAA.all.sd = sd(BAA.all.sum),
BAA.live.mean = mean(BAA.live.sum), BAA.live.sd = sd(BAA.live.sum),
BAA.dead.mean = mean(BAA.dead.sum), BAA.dead.sd = sd(BAA.dead.sum),
BAA.mort.mean = mean(BAA.mort), BAA.mort.sd = sd(BAA.mort), count = n(),
live.count = sum(live), dead.count = sum(dead))
all.forest
conifer.forest.all.summary <- all.forest %>% filter(pltID %in% plots) %>% group_by(time.period, sequence, pltID) %>%
summarize(BAA.all = sum(BAA.all), BAA.live = sum(BAA), BAA.dead.sum = sum(BAA.dead), BAA.mort = sum(BAA.dead) / sum(BAA.all) * 100) %>%
mutate(live = case_when(BAA.all > 0 ~ 1, BAA.all == 0 ~ 0),
dead = case_when(BAA.mort > 0 ~ 1, BAA.mort == 0 | is.na(BAA.mort) ~ 0)) %>%
group_by(time.period, sequence) %>% summarize(BAA.all.mean = mean(BAA.all), BAA.all.sd = sd(BAA.all),
BAA.live.mean = mean(BAA.live), BAA.live.sd = sd(BAA.live),
BAA.dead.mean = mean(BAA.dead.sum), BAA.dead.sd = sd(BAA.dead.sum),
BAA.mort.mean = mean(BAA.mort), BAA.mort.sd = sd(BAA.mort),
count = n(),
live.count = sum(live), dead.count = sum(dead))
conifer.forest.all.summary
p1_texta <- data.frame(label = c("a", "b", "b", "a"),
sequence   = c('Both Droughts', 'Both Droughts', '2nd Drought Only', '2nd Drought Only'),
# tree_type = c('pine/fir', 'other tree', 'pine/fir', 'other tree',
#               'pine/fir', 'other tree', 'pine/fir', 'other tree'),
y     = c(4.25, 1.15, 0.65, 3.55),
x     = c(1, 2, 1, 2)
)
#Letters to indicate sample sizes
p1_textb <- data.frame(label = c("n = 47", "n = 31", "n = 206", "n = 188"),
sequence   = c('Both Droughts', 'Both Droughts', '2nd Drought Only', '2nd Drought Only'),
y     = c(3.95, 0.85, 0.35, 3.25),
x     = c(1, 2, 1, 2)
)
#Summary of Total Dead Basal Area
p1 <- ggbarplot(all.forest %>% filter(pltID %in% plots) %>% group_by(time.period, sequence, pltID) %>% summarize(BAA.all = sum(BAA.all), BAA.live = sum(BAA), BAA.dead.sum = sum(BAA.dead), BAA.mort = sum(BAA.dead) / sum(BAA.all) * 100), #%>% filter(COMMON_NAME %in% sp.both.2002[! sp.both.2002 %in% c('curlleaf mountain-mahogany', 'California live oak')]), #, (sequence == 'Both Droughts' & drought == '1999-2002') | (sequence == '2012-2015 Only' & drought == '2012-2015')),
x = "time.period", y = "BAA.dead.sum", position = position_dodge(), color = "sequence", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab = NULL, order = c("1999-2002", "2012-2015")) +
theme_bw() + guides(color = 'none') +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + labs(tag = 'b)') +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = c(0.76, 0.1), legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), plot.tag.position = c(0.52, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.text.x = element_text(size = 10, face = 'bold')) +
# scale_x_discrete(labels = c("Response During\n1st Period", "Response During\n2nd Period")) +
geom_text(data = p1_texta, mapping = aes(x = x, y = y, label = label), size = 5) +
geom_text(data = p1_textb, mapping = aes(x = x, y = y, label = label), size = 3) +
geom_text(data = data.frame(label = "Mean \n+/- SE", y = 3.5, x = 1.2, sequence = 'Both Droughts'), mapping = aes(x=x, y=y, label = label), size = 2) +
facet_grid(~ factor(sequence, levels = c('Both Droughts', '2nd Drought Only')),
labeller = as_labeller(c('Both Droughts' = "Exposed to Both Droughts", '2nd Drought Only' = "Exposed to 2nd Drought Only")))
p1
#Create a tree_type factor variable and sort it to make the plots
all.forest.type$tree_type.f <- all.forest.type$tree_type
all.forest.type$tree_type.f <- factor(all.forest.type$tree_type.f, levels= c('pine', 'fir', 'oak', 'juniper', 'cedar'))
# all.forest.type <- all.forest.type %>% mutate(tree_type.f = as.factor(tree.type.f(levels = c('pine', 'fir', 'oak', 'juniper', 'cedar'))))
#Add text to the plot
p2_texta <- data.frame(label = c("a", "bc", "cd", "cd", "cd", "cd", "cd", "cd", "cd", "cd",
"cd", "d", "d", "d", "d","ab", "ab", "cd", "d", "cd"),
sequence   = c('Both Droughts', 'Both Droughts', 'Both Droughts', 'Both Droughts', 'Both Droughts', 'Both Droughts',
'Both Droughts', 'Both Droughts', 'Both Droughts', 'Both Droughts', '2nd Drought Only', '2nd Drought Only',
'2nd Drought Only', '2nd Drought Only', '2nd Drought Only', '2nd Drought Only', '2nd Drought Only', '2nd Drought Only',
'2nd Drought Only', '2nd Drought Only'),
# tree_type = c('pine/fir', 'other tree', 'pine/fir', 'other tree',
#               'pine/fir', 'other tree', 'pine/fir', 'other tree'),
y     = c(2.75, 1, 0.6, 0.4, 0.28, 0.6, 0.36, 0.22, 0.4, 0.16,
0.24, 0.2, 0.14, 0.14, 0.16, 1.58, 1.65, 0.27, 0.16, 0.44),
x     = c(0.615, 0.81, 1.01, 1.2, 1.38, 1.615, 1.81, 2.01, 2.2, 2.38,
0.615, 0.81, 1.01, 1.2, 1.38, 1.615, 1.81, 2.01, 2.2, 2.38)
)
#Die-off Mortality as a % of basal area
p2 <- ggbarplot(all.forest.type %>% filter(pltID %in% plots & tree_type != 'other conifer' & tree_type != 'deciduous'), #%>% filter(COMMON_NAME %in% sp.both.2002[! sp.both.2002 %in% c('curlleaf mountain-mahogany', 'California live oak')]), #, (sequence == 'Both Droughts' & drought == '1999-2002') | (sequence == '2012-2015 Only' & drought == '2012-2015')),
x = "time.period", y = "BAA.dead.sum", fill = 'tree_type.f',
color = "sequence",
position = position_dodge(), add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab = NULL, order = c("1999-2002", "2012-2015")) +
theme_bw() + guides(color = 'none', fill = guide_legend(title = "Tree Type", label.position = "bottom", title.position="top", title.hjust = 0.5)) +
scale_color_manual(values = c("black", "black"), aesthetics = "color") + labs(tag = 'd)') +
scale_fill_discrete(labels = c("pine" = "Pine", "fir" = "Fir", "juniper" = "Juniper", "oak" = "Oak", "cedar" = "Cedar")) +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = c(0.45, 0.55), legend.text = element_text(size = 8, angle = 45, vjust = 0.8), legend.title = element_text(size = 10),
legend.direction = "horizontal", axis.text.x = element_text(size = 10, color = 'black'), axis.title.x = element_blank(),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10), strip.background = element_blank(),
strip.text.x = element_blank(), plot.margin = unit(c(2.5,0,0,5), "pt"), panel.spacing = unit(20, "pt"),
plot.tag.position = c(0.52, 0.96), #c(0.54, 0.96)
plot.tag = element_text(face = "bold")) +
scale_x_discrete(labels = c("Response During\n1st Period", "Response During\n2nd Period")) +
geom_text(data = p2_texta, mapping = aes(x = x, y = y, label = label), size = 5) +
# geom_text(data = p1_textb, mapping = aes(x = x, y = y, label = label), size = 3) +
# geom_text(data = data.frame(label = "Mean \n+/- SE", y = 1.7, x = 1.5, sequence = 'Both Droughts'), mapping = aes(x=x, y=y, label = label), size = 2) +
facet_grid(~ factor(sequence, levels = c('Both Droughts', '2nd Drought Only')),
labeller = as_labeller(c('Both Droughts' = "Exposed to Both Droughts", '2nd Drought Only' = "Exposed to 2nd Drought Only")))
p2
#Combine the two figure panels into one
f1 <- ggarrange(p1, p2, ncol = 1, align = "v", labels = c("a)", "c)"), nrow = 2, heights = c(1, 0.95), common.legend = FALSE)
f1
ggsave(filename = 'Fig4_FIA_mortality_by_tree_type.png', height=14, width=16, units = 'cm', dpi=900)
p1 <- ggbarplot(all.forest %>% filter(pltID %in% plots) %>% group_by(time.period, sequence, pltID) %>% summarize(BAA.all = sum(BAA.all), BAA.live = sum(BAA), BAA.dead.sum = sum(BAA.dead), BAA.mort = sum(BAA.dead) / sum(BAA.all) * 100), #%>% filter(COMMON_NAME %in% sp.both.2002[! sp.both.2002 %in% c('curlleaf mountain-mahogany', 'California live oak')]), #, (sequence == 'Both Droughts' & drought == '1999-2002') | (sequence == '2012-2015 Only' & drought == '2012-2015')),
x = "time.period", y = "BAA.dead.sum", position = position_dodge(), color = "sequence", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab = NULL, order = c("1999-2002", "2012-2015")) +
theme_bw() + guides(color = 'none') +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + labs(tag = 'b)') +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = c(0.76, 0.1), legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.text.x = element_text(size = 10, face = 'bold')) +
# scale_x_discrete(labels = c("Response During\n1st Period", "Response During\n2nd Period")) +
geom_text(data = p1_texta, mapping = aes(x = x, y = y, label = label), size = 5) +
geom_text(data = p1_textb, mapping = aes(x = x, y = y, label = label), size = 3) +
geom_text(data = data.frame(label = "Mean \n+/- SE", y = 3.5, x = 1.2, sequence = 'Both Droughts'), mapping = aes(x=x, y=y, label = label), size = 2) +
facet_grid(~ factor(sequence, levels = c('Both Droughts', '2nd Drought Only')),
labeller = as_labeller(c('Both Droughts' = "Exposed to Both Droughts", '2nd Drought Only' = "Exposed to 2nd Drought Only")))
p1
#Create a tree_type factor variable and sort it to make the plots
all.forest.type$tree_type.f <- all.forest.type$tree_type
all.forest.type$tree_type.f <- factor(all.forest.type$tree_type.f, levels= c('pine', 'fir', 'oak', 'juniper', 'cedar'))
# all.forest.type <- all.forest.type %>% mutate(tree_type.f = as.factor(tree.type.f(levels = c('pine', 'fir', 'oak', 'juniper', 'cedar'))))
#Add text to the plot
p2_texta <- data.frame(label = c("a", "bc", "cd", "cd", "cd", "cd", "cd", "cd", "cd", "cd",
"cd", "d", "d", "d", "d","ab", "ab", "cd", "d", "cd"),
sequence   = c('Both Droughts', 'Both Droughts', 'Both Droughts', 'Both Droughts', 'Both Droughts', 'Both Droughts',
'Both Droughts', 'Both Droughts', 'Both Droughts', 'Both Droughts', '2nd Drought Only', '2nd Drought Only',
'2nd Drought Only', '2nd Drought Only', '2nd Drought Only', '2nd Drought Only', '2nd Drought Only', '2nd Drought Only',
'2nd Drought Only', '2nd Drought Only'),
# tree_type = c('pine/fir', 'other tree', 'pine/fir', 'other tree',
#               'pine/fir', 'other tree', 'pine/fir', 'other tree'),
y     = c(2.75, 1, 0.6, 0.4, 0.28, 0.6, 0.36, 0.22, 0.4, 0.16,
0.24, 0.2, 0.14, 0.14, 0.16, 1.58, 1.65, 0.27, 0.16, 0.44),
x     = c(0.615, 0.81, 1.01, 1.2, 1.38, 1.615, 1.81, 2.01, 2.2, 2.38,
0.615, 0.81, 1.01, 1.2, 1.38, 1.615, 1.81, 2.01, 2.2, 2.38)
)
#Die-off Mortality as a % of basal area
p2 <- ggbarplot(all.forest.type %>% filter(pltID %in% plots & tree_type != 'other conifer' & tree_type != 'deciduous'), #%>% filter(COMMON_NAME %in% sp.both.2002[! sp.both.2002 %in% c('curlleaf mountain-mahogany', 'California live oak')]), #, (sequence == 'Both Droughts' & drought == '1999-2002') | (sequence == '2012-2015 Only' & drought == '2012-2015')),
x = "time.period", y = "BAA.dead.sum", fill = 'tree_type.f',
color = "sequence",
position = position_dodge(), add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab = NULL, order = c("1999-2002", "2012-2015")) +
theme_bw() + guides(color = 'none', fill = guide_legend(title = "Tree Type", label.position = "bottom", title.position="top", title.hjust = 0.5)) +
scale_color_manual(values = c("black", "black"), aesthetics = "color") + labs(tag = 'd)') +
scale_fill_discrete(labels = c("pine" = "Pine", "fir" = "Fir", "juniper" = "Juniper", "oak" = "Oak", "cedar" = "Cedar")) +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = c(0.45, 0.55), legend.text = element_text(size = 8, angle = 45, vjust = 0.8), legend.title = element_text(size = 10),
legend.direction = "horizontal", axis.text.x = element_text(size = 10, color = 'black'), axis.title.x = element_blank(),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10), strip.background = element_blank(),
strip.text.x = element_blank(), plot.margin = unit(c(2.5,0,0,5), "pt"), panel.spacing = unit(20, "pt"),
plot.tag.position = c(0.53, 0.96), #c(0.54, 0.96)
plot.tag = element_text(face = "bold")) +
scale_x_discrete(labels = c("Response During\n1st Period", "Response During\n2nd Period")) +
geom_text(data = p2_texta, mapping = aes(x = x, y = y, label = label), size = 5) +
# geom_text(data = p1_textb, mapping = aes(x = x, y = y, label = label), size = 3) +
# geom_text(data = data.frame(label = "Mean \n+/- SE", y = 1.7, x = 1.5, sequence = 'Both Droughts'), mapping = aes(x=x, y=y, label = label), size = 2) +
facet_grid(~ factor(sequence, levels = c('Both Droughts', '2nd Drought Only')),
labeller = as_labeller(c('Both Droughts' = "Exposed to Both Droughts", '2nd Drought Only' = "Exposed to 2nd Drought Only")))
p2
#Combine the two figure panels into one
f1 <- ggarrange(p1, p2, ncol = 1, align = "v", labels = c("a)", "c)"), nrow = 2, heights = c(1, 0.95), common.legend = FALSE)
f1
ggsave(filename = 'Fig4_FIA_mortality_by_tree_type.png', height=14, width=16, units = 'cm', dpi=900)
sev.data <- read.csv(file.path(dir_in, "fire_south_sierra_USFS_sevfire_500pt_200elev_lfevt_5tree_ts8_300m_20230315.csv"), header = TRUE, na.strings = "NaN")
# fire.data$fire.year <- fire.data$perimeter_year
sev.data$treatment <- 'Disturb'
summary(sev.data)
# list.files(fire_in)
# list.files(fire_in)
raw.sev.control.data <- read.csv(file.path(dir_in, "control_south_sierra_sev_2km_buffer_500pt_200elev_lfevt_5tree_ts16_300m_20230315.csv"), header = TRUE, na.strings = "NaN")
# unchanged.control.data <- read.csv(file.path(dir_in, "control_south_sierra_unchanged_sev_2km_buffer_200pt_100mm_2C_5tree_ts16_300m_20230227_V2.csv"), header = TRUE, na.strings = "NaN")
# low.control.data <- read.csv(file.path(dir_in, "control_south_sierra_low_sev_2km_buffer_200pt_100mm_2C_5tree_ts16_300m_20230227_V2.csv"), header = TRUE, na.strings = "NaN")
# med.control.data <- read.csv(file.path(dir_in, "control_south_sierra_med_sev_2km_buffer_200pt_100mm_2C_5tree_ts16_300m_20230227_V2.csv"), header = TRUE, na.strings = "NaN")
# high.control.data <- read.csv(file.path(dir_in, "control_south_sierra_high_sev_2km_buffer_200pt_100mm_2C_5tree_ts16_300m_20230227_V2.csv"), header = TRUE, na.strings = "NaN")
#Duplicate and add the fire severity columns
unchanged.control.data <- raw.sev.control.data
unchanged.control.data$fire_sev_2010 <- 1
low.control.data <- raw.sev.control.data
low.control.data$fire_sev_2010 <- 2
med.control.data <- raw.sev.control.data
med.control.data$fire_sev_2010 <- 3
high.control.data <- raw.sev.control.data
high.control.data$fire_sev_2010 <- 4
# unchanged.control.data
# raw.sev.control.data
# sev.data
sev.control.data <- rbind(unchanged.control.data, low.control.data, med.control.data, high.control.data)
#Add Fire Columns
# control.data$fire_sev_2010 <- -9999
# control.data$fire_year_2010 <- -9999
# control.data$fire_ID_2010 <- -9999
sev.control.data$fire_count_2010 <- -9999
sev.control.data$fire_sev_2019 <- -9999
sev.control.data$fire_year_2019 <- -9999
sev.control.data$fire_ID_2019 <- -9999
sev.control.data$fire_count_2019 <- -9999
sev.control.data$fire_sev_2020 <- -9999
sev.control.data$fire_year_2020 <- -9999
sev.control.data$fire_ID_2020 <- -9999
sev.control.data$fire_count_2020 <- -9999
#Add buffer dummy columns for fire.data
# sev.data$buffer_type_2010 <- -9999
# sev.data$buffer_type_2019 <- -9999
# sev.data$buffer_year_2010 <- -9999
# sev.data$buffer_year_2019 <- -9999
# summary(control.data)
#Get a  of the data
# summary(pixel.data)
# pixel.data <- pixel.data %>% filter(fire.year >= 1919 & !is.na(stand.age) & !is.na(NDMI))
# control.data$fire.year <- control.data$perimeter_year
sev.control.data$treatment <- 'Control' #Try making this 1-km versus, 2-km
#Figure out why the two dataframes don't match
# sev.n <- sev.data %>% colnames()
# con.n <- control.data %>% colnames()
# sev.n
# con.n
# sev.n[!(sev.n %in% con.n)]
#Combine the data together
sev.pixel.data <- rbind(sev.data, sev.control.data)
# pixel.data <- rbind(combine.data, control.data.2km)
summary(sev.pixel.data)
`%notin%` <- Negate(`%in%`)
#Convert data to long format
sev.pixel.data <- sev.pixel.data %>% #dplyr::select(-c('latitude', 'longitude')) %>%
pivot_longer(cols = X10_AET:X9_tpa_max, names_to = c('year', '.value'), names_pattern = "X(\\d{1}|\\d{2})_(.*)", names_repair = "unique")
sev.pixel.data$year <- as.numeric(sev.pixel.data$year) + 1984
#Convert missing TPA data to NAs
sev.pixel.data[sev.pixel.data$tpa_max < 0,]$tpa_max <- NA
#Convert fire data -9999 to NAs
sev.pixel.data[sev.pixel.data$fire_sev_2010 == -9999,]$fire_sev_2010 <- NA
sev.pixel.data[sev.pixel.data$fire_year_2010 == -9999,]$fire_year_2010 <- NA
sev.pixel.data[sev.pixel.data$fire_ID_2010 == -9999,]$fire_ID_2010 <- NA
sev.pixel.data[sev.pixel.data$fire_count_2010 == -9999,]$fire_count_2010 <- NA
sev.pixel.data[sev.pixel.data$fire_sev_2019 == -9999,]$fire_sev_2019 <- NA
sev.pixel.data[sev.pixel.data$fire_year_2019 == -9999,]$fire_year_2019 <- NA
sev.pixel.data[sev.pixel.data$fire_ID_2019 == -9999,]$fire_ID_2019 <- NA
sev.pixel.data[sev.pixel.data$fire_count_2019 == -9999,]$fire_count_2019 <- NA
sev.pixel.data[sev.pixel.data$fire_sev_2020 == -9999,]$fire_sev_2020 <- NA
sev.pixel.data[sev.pixel.data$fire_year_2020 == -9999,]$fire_year_2020 <- NA
sev.pixel.data[sev.pixel.data$fire_ID_2020 == -9999,]$fire_ID_2020 <- NA
sev.pixel.data[sev.pixel.data$fire_count_2020 == -9999,]$fire_count_2020 <- NA
#Convert to trees per hectare
sev.pixel.data$tpa_max <- sev.pixel.data$tpa_max * 2.47105
#Make the dates into date time format for R
sev.pixel.data$date <- as.Date(as.character(sev.pixel.data$year), format = '%Y')
# sev.pixel.data$vi.year <- format(sev.pixel.data$date , '%Y')
sev.pixel.data$vi.year <- sev.pixel.data$year
#Use the FRAP fire perimeter year
sev.pixel.data$fire.year <- sev.pixel.data$fire_year_2010
sev.pixel.data$stand.age <- as.numeric(sev.pixel.data$year) - as.numeric(sev.pixel.data$fire.year)
#Update Cover data to 100% scale
sev.pixel.data$Tree_Cover <- sev.pixel.data$Tree_Cover / 100
sev.pixel.data$Shrub_Cover <- sev.pixel.data$Shrub_Cover / 100
sev.pixel.data$Herb_Cover <- sev.pixel.data$Herb_Cover / 100
sev.pixel.data$Bare_Cover <- sev.pixel.data$Bare_Cover / 100
#Convert the SPI48 scale back to decimal
sev.pixel.data$SPI48 <- sev.pixel.data$SPI48 / 100
#Try to fix soil moisture by dividing by 10
sev.pixel.data$Soil_Moisture <- sev.pixel.data$Soil_Moisture / 10
#Rename ppt and Water Stress
sev.pixel.data$Water_Stress <- sev.pixel.data$Water_Stress
sev.pixel.data$ppt <- sev.pixel.data$ppt
sev.pixel.data$AET <- sev.pixel.data$AET
sev.pixel.data$GPP <- sev.pixel.data$GPP
sev.pixel.data$elevation <- sev.pixel.data$elevation
sev.pixel.data$PrET <- sev.pixel.data$ppt - sev.pixel.data$AET
#
summary(sev.pixel.data %>% filter(fire_sev_2010 != 243))
sev.pixel.data <- sev.pixel.data %>% mutate(treat = case_when(treatment == 'Disturb' ~ 1, treatment == 'Control' ~ 0))
# match0 <- matchit(data = sev.pixel.data %>% filter(fire_sev_2010 != 243), formula = treat ~ Tree_Cover + clm_precip_sum, method = NULL, distance = "glm")
# summary(match0)
#
# match1 <- matchit(data = sev.pixel.data %>% filter(fire_sev_2010 != 243), formula = treat ~ clm_precip_sum,
#                   method = "nearest", distance = "glm")
# summary(match1)
sev.pixel.data <- sev.pixel.data %>% mutate(fire.year.bin = case_when(
# bin >= 1 ~ '1900',
# bin == 2 ~ '1909-1910',
# bin >= 1911 & bin <= 1920 ~ '95-104', #Calculated relative to 2015
# treatment == 'Control' ~ 'No Fire',
# fire.year >= 1910 & fire.year <=  1970 ~ '1910-1970',#'81-95',
# fire.year >= 1936 & fire.year <= 1950 ~ '65-79',
# fire.year >= 1951 & fire.year <= 1965 ~ '50-64',
# fire.year >= 1951 & fire.year <= 1960 ~ '55-64',
# fire.year >= 1971 & fire.year <= 1980 ~ '1971-1980',#'56-80',
# fire.year >= 1985 & fire.year <= 1990 ~ '1985-1990',
# fire.year >= 1991 & fire.year <= 2000 ~ '1991-2000',#'31-55',
# fire.year >= 1991 & fire.year <= 2000 ~ '15-24',
fire.year >= 1985 & fire.year <= 2010 ~ '1985-2010',
# fire.year >= 2001 & fire.year <= 2010 ~ '2001-2010',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2017')) #,
# fire.year >= 2019 ~ '2019-2020'))#'0-4'))
#Fire Severity Bins
#With re-export type needs to be converted to sev
sev.pixel.data <- sev.pixel.data %>% mutate(sev.bin = case_when(
fire_sev_2010 == '0' ~ 'No Fire',
fire_sev_2010 == '1' ~ 'Unchanged',
fire_sev_2010 == '2' ~ 'Low',
fire_sev_2010 == '3' ~ 'Mid',
fire_sev_2010 == '4' ~ 'High',
fire_sev_2010 == '255' ~ 'Masked')) # end function
sev.pixel.data %>% summary()
#Fire year bins for Fire Severity Data
sev.pixel.data$fire.year.bin = with(sev.pixel.data, factor(fire.year.bin, levels = c('2011-2017', '1985-2010')))#c('0-4','5-30','31-55','56-80',
#Make the years bin lables in the correct order
sev.pixel.data$sev.bin = with(sev.pixel.data, factor(sev.bin, levels = c('No Fire','Unchanged', 'Low','Mid', 'High')))#c('No Fire','Masked', 'Unchanged or Low','Mid or High')))
#Recode the veg type data
sev.pixel.data$veg_name <- recode(.x=sev.pixel.data$lf_evt_2001, .default = NA_character_, '2015' = 'Redwood', '2019' = 'Pinyon Juniper', '2020' = 'Bristlecone Pine', '2027' = 'Mixed Conifer', '2028' = 'White Fir', '2031' = 'Jeffrey Pine',
'2032' = 'Red Fir', '2033' = 'Subalpine', '2034' = 'Knobcone Pine', '2043' = 'Mixed Conifer', '2044' = 'Subalpine', '2045' = 'Mixed Conifer',
'2053' = 'Ponderosa Pine', '2058' = 'Lodgepole Pine', '2061' = 'Mixed Conifer', '2112' = 'Blue Oak Woodland', '2172' = 'White Fir', '2173' = 'Lodgepole Pine', '2201' = 'Oregon White Oak', '2230' = 'Blue Oak - Digger Pine')
sev.pixel.data %>% summary()
#Select strat categories for fire treatments
un.disturb <- sev.pixel.data %>% filter(sev.bin == 'Unchanged' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n() /35) %>% filter(n >= 20) %>% pull(stratlayer)
lo.disturb <- sev.pixel.data %>% filter(sev.bin == 'Low' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n() /35) %>% filter(n >= 35) %>% pull(stratlayer)
mid.disturb <- sev.pixel.data %>% filter(sev.bin == 'Mid' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n() /35) %>% filter(n >= 20) %>% pull(stratlayer)
hi.disturb <- sev.pixel.data %>% filter(sev.bin == 'High' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n() /35) %>% filter(n >= 25) %>% pull(stratlayer)
un.control <- sev.pixel.data %>% filter(sev.bin == 'Unchanged' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n() /35) %>% filter(n >= 20) %>% pull(stratlayer)
lo.control <- sev.pixel.data %>% filter(sev.bin == 'Low' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n() /35) %>% filter(n >= 35) %>% pull(stratlayer)
mid.control <- sev.pixel.data %>% filter(sev.bin == 'Mid' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n() /35) %>% filter(n >= 20) %>% pull(stratlayer)
hi.control <- sev.pixel.data %>% filter(sev.bin == 'High' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n() /35) %>% filter(n >= 25) %>% pull(stratlayer)
un.strat <- intersect(un.disturb, un.control)
lo.strat <- intersect(lo.disturb, lo.control)
mid.strat <- intersect(mid.disturb, mid.control)
hi.strat <- intersect(hi.disturb, hi.control)
