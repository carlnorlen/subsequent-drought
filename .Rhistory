type.join <- left_join(type.sum, type.live, by = c('PLOT', 'drought', 'tree_type'))
type.all <- left_join(type.join, type.dead, by = c('PLOT', 'drought', 'tree_type'))
#Filling in live plot variables
type.all$count.live[is.na(type.all$count.live)] <- 0
type.all$biomass.live[is.na(type.all$biomass.live)] <- 0
type.all$basal_area.live[is.na(type.all$basal_area.live)] <- 0
#Filling in dead plot variables
type.all$count.dead[is.na(type.all$count.dead)] <- 0
type.all$biomass.dead[is.na(type.all$biomass.dead)] <- 0
type.all$basal_area.dead[is.na(type.all$basal_area.dead)] <- 0
type.all$basal_area.mort <- type.all$basal_area.dead / type.all$basal_area * 100
type.all <- as.data.frame(type.all)
#Summaries by tree types
type.summary <- type.all %>% group_by(tree_type, drought) %>% summarize(
biomass.mean = mean(biomass),
biomass.sd = sd(biomass),
biomass.se = sd(biomass) / sqrt(length(biomass)),
count.mean = mean(count),
count.sd = sd(count),
count.se = sd(count) / sqrt(length(count)),
basal_area.mean = mean(basal_area),
basal_area.sd = sd(basal_area),
basal_area.se = sd(basal_area) / sqrt(length(basal_area)),
basal_area.dead.mean = mean(basal_area.dead),
basal_area.dead.sd = sd(basal_area.dead),
basal_area.dead.se = sd(basal_area.dead) / sqrt(length(basal_area.dead)),
mortality.mean = mean(basal_area.mort),
mortality.sd = sd(basal_area.mort),
mortality.se = sd(basal_area.mort) / sqrt(length(basal_area.mort)),
sample.size = length(count)
)
#Convert into a data frame
type.summary <- as.data.frame(type.summary)
#Get data for the 2012-2015 Only Drought Sequence
#Query for FIA live trees, 2015-2019
q5 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)*(t.tpa_unadj) live_biomass, -- biomass (lbs) of tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, t.invyr, r.common_name, t.spcd, c.fortypcd, c.fldtypcd, rft.meaning
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --2 means forest
AND t.statuscd = 1 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 5.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba') --South Sierra Nevada
AND (p.invyr >= 2015 AND p.invyr <= 2019)
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70)
")
live.second.2017 <- dbFetch(q5, n = -1)
#Query for FIA dead trees, 2015-2019
q6 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)* t.tpa_unadj live_biomass, -- biomass (lbs) per tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, t.invyr, r.common_name, t.spcd, c.fortypcd, c.fldtypcd, rft.meaning--t.spcd, r.major_spgrpcd
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --1 means forest
AND t.statuscd = 2 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 5.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba') --OR P.ECOSUBCD = 'M261Es'  South Sierra Nevada
AND (p.invyr >= 2015 AND p.invyr <= 2019)
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70)
AND (t.mortyr != 2001 AND t.mortyr != 2002 AND t.mortyr != 2003 AND t.mortyr != 2004 AND t.mortyr != 2005 AND t.mortyr != 2006 AND t.mortyr != 2007 AND t.mortyr != 2008)
")
#Retrieve the queried data
dead.second.2017 <- dbFetch(q6, n = -1)
#Query for FIA live trees 2002 - 2006
q7 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)* t.tpa_unadj live_biomass, -- biomass (lbs) per tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, p.invyr, r.common_name, t.spcd, c.fortypcd, c.fldtypcd, rft.meaning--t.spcd, r.major_spgrpcd
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
--seedling s, --seedling table must be included for seedling level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --1 means forest
AND t.statuscd = 1 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 5.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
--AND (P.COUNTYCD = 65 OR P.COUNTYCD = 71 OR P.COUNTYCD = 37 OR P.COUNTYCD = 73 OR P.COUNTYCD = 59)
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba') --OR P.ECOSUBCD = 'M261Es'  South Sierra Nevada
AND (p.invyr >= 2002 AND p.invyr <= 2006)
--AND (c.dstrbcd1 != 30 OR c.dstrbcd1 != 31 OR c.dstrbcd1 != 32) --this seems to cause problems for 1994 periodic plots, this removes plots with a burn disturbance code
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70) --10, 11, 12 are insect, 54 is drought, 0 is no disturbance, 70 is unknown
")
#Retrieve the queried data
live.second.2007 <- dbFetch(q7, n = -1)
#Query for FIA dead trees 2002 - 2006
q8 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)* t.tpa_unadj live_biomass, -- biomass (lbs) per tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, p.invyr, r.common_name, t.spcd, c.fortypcd, c.fldtypcd, rft.meaning
FROM --cond c_past,
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --1 means forest
AND t.statuscd = 2 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 5.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba') --OR P.ECOSUBCD = 'M261Es'  South Sierra Nevada
AND (p.invyr >= 2002 AND p.invyr <= 2006)
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70) --10, 11, 12 are insect, 54 is drought, 0 is no disturbance, 70 is unknown
AND (t.mortyr != '') --Seeing what happens when I remove this
")
#Retrieve the queried data
dead.second.2007 <- dbFetch(q8, n = -1)
#Columns to drop
drop.cols <- c('INVYR', 'FORTYPCD','MEANING')
#Combine the live and dead trees for the 2011-2017 surveys.
trees.second.2017 <- rbind(live.second.2017, dead.second.2017)
#Create column with just conifer versus broadleaf
trees.second.2017$veg_type <- recode(.x=trees.second.2017$COMMON_NAME, 'California black oak' = 'oak', 'California juniper' = 'conifer', 'California live oak' = 'oak', 'California sycamore' = 'broadleaf', 'Coulter pine' = 'conifer', 'chinkapin oak' = 'oak', 'Jeffrey pine' = 'conifer',
'bigcone Douglas-fir' = 'conifer', 'bigleaf maple' = 'broadleaf', 'canyon live oak' = 'oak', 'curlleaf mountain-mahogany' = 'broadleaf', 'incense-cedar' = 'conifer', 'interior live oak' = 'oak', 'limber pine' = 'conifer',
'lodgepole pine' = 'conifer', 'ponderosa pine' = 'conifer', 'singleleaf pinyon' = 'conifer', 'sugar pine' = 'conifer', 'Utah juniper' = 'conifer', 'western juniper' = 'conifer', 'white alder' = 'broadleaf', 'white fir' = 'conifer', 'California laurel' = 'broadleaf',
'California-laurel' = 'broadleaf', 'Oregon ash' = 'broadleaf', 'Douglas-fir' = 'conifer', 'honey mesquite' = 'broadleaf', 'desert ironwood' = 'broadleaf', 'California red fir' = 'conifer', 'California buckeye' = 'broadleaf', 'Engelmann oak' = 'oak', 'grand fir' = 'conifer')
#Combine the dead and live tree samples for 2002-2006 into one data frame
trees.second.2007 <- rbind(live.second.2007, dead.second.2007)
#Separate into broadleaf, conifer, oak vegetation types
trees.second.2007$veg_type <- recode(.x=trees.second.2007$COMMON_NAME, 'California black oak' = 'oak', 'California juniper' = 'conifer', 'California live oak' = 'oak', 'California sycamore' = 'broadleaf', 'Coulter pine' = 'conifer', 'chinkapin oak' = 'oak', 'Jeffrey pine' = 'conifer',
'bigcone Douglas-fir' = 'conifer', 'bigleaf maple' = 'broadleaf', 'canyon live oak' = 'oak', 'curlleaf mountain-mahogany' = 'broadleaf', 'incense-cedar' = 'conifer', 'interior live oak' = 'oak', 'limber pine' = 'conifer',
'lodgepole pine' = 'conifer', 'ponderosa pine' = 'conifer', 'singleleaf pinyon' = 'conifer', 'sugar pine' = 'conifer', 'Utah juniper' = 'conifer', 'western juniper' = 'conifer', 'white alder' = 'broadleaf', 'white fir' = 'conifer', 'California laurel' = 'broadleaf',
'California-laurel' = 'broadleaf', 'Oregon ash' = 'broadleaf', 'Douglas-fir' = 'conifer', 'honey mesquite' = 'broadleaf', 'desert ironwood' = 'broadleaf', 'California red fir' = 'conifer', 'California buckeye' = 'broadleaf', 'Engelmann oak' = 'oak', 'grand fir' = 'conifer')
#Seperate into conifer and other forest types
trees.second.2007$forest_type <- recode(.x=trees.second.2007$MEANING, 'Canyon live oak' = 'other', 'California mixed conifer' = 'conifer', 'Pinyon / juniper woodland'= 'conifer', 'Jeffrey pine'= 'conifer', 'Lodgepole pine'= 'conifer', 'Limber pine'= 'conifer', 'Other hardwoods' = 'other',
'Cercocarpus (mountain brush) woodland' = 'other', 'White fir' = 'conifer', 'California black oak' = 'other', 'Bigcone Douglass-fir' = 'conifer', 'Willow' = 'other', 'Western juniper' = 'conifer', 'Coast live oak' = 'other', 'Incense-cedar' = 'conifer',
'Interior live oak' = 'other', 'Juniper woodland' = 'conifer', 'Red alder' = 'other', 'Ponderosa pine' = 'conifer', 'Nonstocked' = 'other', 'Oregon ash' = 'other', 'Coulter pine' = 'conifer')
#Sepearate into conifer and other forest types
trees.second.2017$forest_type <- recode(.x=trees.second.2017$MEANING, 'Canyon live oak' = 'other', 'California mixed conifer' = 'conifer', 'Pinyon / juniper woodland'= 'conifer', 'Jeffrey pine'= 'conifer', 'Lodgepole pine'= 'conifer', 'Limber pine'= 'conifer', 'Other hardwoods' = 'other',
'Cercocarpus (mountain brush) woodland' = 'other', 'White fir' = 'conifer', 'California black oak' = 'other', 'Bigcone Douglass-fir' = 'conifer', 'Willow' = 'other', 'Western juniper' = 'conifer', 'Coast live oak' = 'other', 'Incense-cedar' = 'conifer',
'Interior live oak' = 'other', 'Juniper woodland' = 'conifer', 'Red alder' = 'other', 'Ponderosa pine' = 'conifer', 'Nonstocked' = 'other', 'Oregon ash' = 'other', 'Coulter pine' = 'conifer')
#Update tree status so live = 0, dead = 1
trees.second.2017$STATUSCD[trees.second.2017$STATUSCD == 1] <- 0
trees.second.2017$STATUSCD[trees.second.2017$STATUSCD == 2] <- 1
trees.second.2007$STATUSCD[trees.second.2007$STATUSCD == 1] <- 0
trees.second.2007$STATUSCD[trees.second.2007$STATUSCD == 2] <- 1
#Convert height in feet to meters.
trees.second.2007$ACTUALHT <- trees.second.2007$ACTUALHT * (1/3.281) #2002-2006 sample of trees. Measured tree height.
trees.second.2007$HT <- trees.second.2007$HT * (1/3.281) #2015-2019 sample of trees. Tree height corrected for broken tops.
trees.second.2017$ACTUALHT <- trees.second.2017$ACTUALHT * (1/3.281) #2002-2006 sample of trees. Measured tree height.
trees.second.2017$HT <- trees.second.2017$HT * (1/3.281) #2015-2019 sample of trees. Tree hieght corrected for broken tops.
#Convert lbs to Mg
trees.second.2007$live_biomass <- trees.second.2007$live_biomass * (1/2205) #2002-2006 sample of trees
trees.second.2017$live_biomass <- trees.second.2017$live_biomass * (1/2205) #2015-2019 sample of trees
#Convert inches to centimeters. (1 in = 2.54 cm)
trees.second.2007$DIA <- trees.second.2007$DIA * (2.54) #2002-2006 sample of trees
trees.second.2017$DIA <- trees.second.2017$DIA * (2.54) #2015-2019 sample of trees
#Convert from trees per acre to trees per hectare
trees.second.2007$count <- trees.second.2007$count * (1/0.404686) #2002-2006 sample of trees
trees.second.2017$count <- trees.second.2017$count * (1/0.404686) #2015-2019 sample of trees
#Year lables for the tree samples
trees.second.2007$drought <- '1999-2002'
trees.second.2017$drought <- '2012-2015'
#Combine samples for the two time periods for the 2012-2015 Only drought sequence
trees.second <- rbind(trees.second.2007, trees.second.2017)
#Add a string column for live and dead trees
trees.second$Tree_Status[trees.second$STATUSCD == 0] <- 'Live'
trees.second$Tree_Status[trees.second$STATUSCD == 1] <- 'Dead'
#Calculate basal area. Convert to m^2 / ha (from cm^2 / ha)
trees.second$basal_area <- (((trees.second$DIA / 2)^2) * pi)*(1/10000) * trees.second$count
#Change tree names to other tree or pine/fir
trees.second$tree_type <- recode(.x=trees.second$COMMON_NAME, 'California black oak' = 'other tree', 'California juniper' = 'other tree', 'California live oak' = 'other tree', 'California sycamore' = 'other tree', 'Coulter pine' = 'pine/fir', 'chinkapin oak' = 'other tree', 'Jeffrey pine' = 'pine/fir',
'bigcone Douglas-fir' = 'pine/fir', 'bigleaf maple' = 'other tree', 'canyon live oak' = 'other tree', 'curlleaf mountain-mahogany' = 'other tree', 'incense-cedar' = 'other tree', 'interior live oak' = 'other tree', 'limber pine' = 'pine/fir',
'lodgepole pine' = 'pine/fir', 'ponderosa pine' = 'pine/fir', 'singleleaf pinyon' = 'pine/fir', 'sugar pine' = 'pine/fir', 'Utah juniper' = 'other tree', 'western juniper' = 'other tree', 'white alder' = 'other tree', 'white fir' = 'pine/fir', 'California laurel' = 'other tree',
'California-laurel' = 'other tree', 'Oregon ash' = 'other tree', 'Douglas-fir' = 'pine/fir', 'honey mesquite' = 'other tree', 'desert ironwood' = 'other tree', 'California red fir' = 'pine/fir', 'California buckeye' = 'other tree', 'Engelmann oak' = 'other tree', 'grand fir' = 'pine/fir', 'western white pine' = 'pine/fir',
"western white pine" = 'pine/fir', "whitebark pine" = 'pine/fir', "mountain hemlock" = "pine/fir", "gray or California foothill pine" = "pine/fir", "foxtail pine" = 'pine/fir', "blue oak" = 'other tree', "California white oak" = 'other tree', "quaking aspen" = 'other tree',
"giant sequoia" = 'other tree', "Unknown dead conifer" = 'pine/fir', "ash spp." = 'other tree', "black cottonwood" = 'other tree', "California torreya (nutmeg)" = 'other tree', "Oregon white oak" = 'other tree', "Port-Orford-cedar" = 'other tree', "Pacific dogwood" = 'other tree')
#Sort into tree diameter groups
# trees.second <- trees.second %>% mutate(DIA.group = case_when(
# 														DIA >= 30 ~ '30+ cm',
# 														DIA < 30 ~ '12.7-29 cm')) # end function
#
# trees.second$DIA.group = with(trees.second, factor(DIA.group, levels = c('12.7-29 cm', '30+ cm')))
#Convert into a data frame
trees.second <- as.data.frame(trees.second)
#Group data by plot and drought
trees.second.group <- trees.second %>% group_by(PLOT, drought) %>%
summarize(count.plot = sum(count),
biomass.plot = sum(live_biomass),
BasalArea.plot = sum(basal_area),
DIA.plot.mean = sum(DIA*count) / sum(count),
DIA.plot.stdDev = sqrt(sum((DIA - (sum(DIA*count)/sum(count)))^2 * count) / sum(count)))
#Convert into a data frame
trees.second.group <- as.data.frame(trees.second.group)
#Group by plot, drought and tree status
trees.second.status <- trees.second %>% group_by(PLOT, drought, Tree_Status) %>%
summarize(count.plot = sum(count),
biomass.plot = sum(live_biomass),
BasalArea.plot = sum(basal_area),
DIA.plot.mean = sum(DIA*count) / sum(count),
DIA.plot.stdDev = sqrt(sum((DIA - (sum(DIA*count)/sum(count)))^2 * count) / sum(count)))
#Convert into a data frame
trees.second.status <- as.data.frame(trees.second.status)
#Select the live tree data
trees.second.live <- subset(trees.second.status, Tree_Status == 'Live')
colnames(trees.second.live) <- c("PLOT", "drought", "Tree_Status", "count.live", "biomass.live", "BasalArea.live", "DIA.mean.live", "DIA.stdDev.live")
#Select the dead tree data
trees.second.dead <- subset(trees.second.status, Tree_Status == 'Dead')
colnames(trees.second.dead) <- c("PLOT", "drought", "Tree_Status", "count.dead", "biomass.dead", "BasalArea.dead", "DIA.mean.dead", "DIA.stdDev.dead")
# Select a list of the plots by the sampling year
plots.second.both <- trees.second.group %>% dplyr::select(PLOT, drought)
#Remove tree status column
rmv <- c('Tree_Status')
trees.second.live <- dplyr::select(trees.second.live, -rmv)
#Join data tables
join.second.live <- left_join(plots.second.both, trees.second.live, by = c('PLOT', 'drought'))
#Remove uneccessary columns
trees.second.dead <- dplyr::select(trees.second.dead, -rmv)
join.second.dead <- left_join(plots.second.both, trees.second.dead, by = c('PLOT', 'drought'))
join.second <- left_join(join.second.live, join.second.dead, by = c('PLOT', 'drought'))
#Filling in live plot variables
join.second$count.live[is.na(join.second$count.live)] <- 0
join.second$biomass.live[is.na(join.second$biomass.live)] <- 0
join.second$DIA.mean.live[is.na(join.second$DIA.mean.live)] <- 0
join.second$DIA.stdDev.live[is.na(join.second$DIA.stdDev.live)] <- 0
join.second$BasalArea.live[is.na(join.second$BasalArea.live)] <- 0
#Filling in dead conifer plot variables
join.second$count.dead[is.na(join.second$count.dead)] <- 0
join.second$biomass.dead[is.na(join.second$biomass.dead)] <- 0
join.second$DIA.mean.dead[is.na(join.second$DIA.mean.dead)] <- 0
join.second$DIA.stdDev.dead[is.na(join.second$DIA.stdDev.dead)] <- 0
join.second$BasalArea.dead[is.na(join.second$BasalArea.dead)] <- 0
#Join data tables
trees.second.join <- left_join(trees.second.group, join.second, by = c('PLOT', 'drought'))
trees.second.join
#Calculate mortality percentages with different data
trees.second.join$mort.count <- (trees.second.join$count.dead / (trees.second.join$count.plot)) * 100
trees.second.join$mort.biomass <- (trees.second.join$biomass.dead / (trees.second.join$biomass.plot)) * 100
trees.second.join$mort.BasalArea <- (trees.second.join$BasalArea.dead / (trees.second.join$BasalArea.plot)) * 100
#Create tree diameter grouping
# trees.second.DIA <- subset(trees.second, forest_type == 'conifer') %>% group_by(DIA.group, PLOT, drought) %>%
# 							 summarize(count = sum(count),
# 									   biomass = sum(live_biomass),
# 									   basal_area = sum(basal_area)
# 									   )
#
# #Create tree diameter and plot group
# trees.second.group <- subset(trees.second, tree_type == 'pine/fir') %>% group_by(DIA.group, PLOT, Tree_Status, drought) %>% summarize(
# 									   biomass = sum(live_biomass),
# 									   count = sum(count),
# 									   basal_area = sum(basal_area)
# 		)
# # trees.second.group
# trees.second.group <- as.data.frame(trees.second.group)
#
# #Get the totals by plot by DIA group and drought
# trees.second.sum <- subset(trees.second, tree_type == 'pine/fir') %>% group_by(DIA.group, PLOT, drought) %>% summarize(
# 									   biomass = sum(live_biomass),
# 									   count = sum(count),
# 									   basal_area = sum(basal_area)
# 		)
# # trees.second.sum
# trees.second.select <- trees.second.group %>% dplyr::select(DIA.group, PLOT, drought)
#Get the data for the full plot
plot.second.group <- subset(trees.second, tree_type == 'pine/fir') %>% group_by(PLOT, Tree_Status, drought) %>% summarize(
biomass = sum(live_biomass),
count = sum(count),
basal_area = sum(basal_area)
)
#Convert into a data frame
plot.second.group <- as.data.frame(plot.second.group)
#Get summary data by plot
plot.second.summary <- plot.second.group %>% group_by(Tree_Status, drought) %>% summarize(
biomass.mean = mean(biomass),
biomass.sd = sd(biomass),
biomass.se = sd(biomass) / sqrt(length(biomass)),
count.mean = mean(count),
count.sd = sd(count),
count.se = sd(count) / sqrt(length(count)),
basal_area.mean = mean(basal_area),
basal_area.sd = sd(basal_area),
basal_area.se = sd(basal_area) / sqrt(length(basal_area))
)
#Convert into a data frame
plot.second.summmary <- as.data.frame(plot.second.summary)
#Summarize by tree type
trees.second.type <- trees.second %>% group_by(tree_type, PLOT, Tree_Status, drought) %>% summarize(
biomass = sum(live_biomass),
count = sum(count),
basal_area = sum(basal_area)
)
#Convert into a data frame
trees.second.type <- as.data.frame(trees.second.type)
#Full plot summaries
# trees.second.sum <- subset(trees.second, tree_type == 'pine/fir') %>% group_by(DIA.group, PLOT, drought) %>% summarize(
# 									   biomass = sum(live_biomass),
# 									   count = sum(count),
# 									   basal_area = sum(basal_area)
# 		)
# trees.second.sum
#Make sure to include all the zeros
# DIA.second.live.small <- subset(trees.second.group, Tree_Status == 'Live' & DIA.group == '12.7-29 cm')
# colnames(DIA.second.live.small) <- c("DIA.group", "PLOT", "Tree_Status", "drought", "biomass.live", "count.live", "basal_area.live")
# join.DIA.second.live.small <- left_join(plots.second.both, DIA.second.live.small, by = c('PLOT', 'drought'))
# join.DIA.second.live.small$DIA.group <- '12.7-29 cm'
# join.DIA.second.live.small$Tree_Status <- 'Live'
#
# DIA.second.live.mid <- subset(trees.second.group, Tree_Status == 'Live' & DIA.group == '30+ cm')
# colnames(DIA.second.live.mid) <- c("DIA.group", "PLOT", "Tree_Status", "drought", "biomass.live", "count.live", "basal_area.live")
# join.DIA.second.live.mid <- left_join(plots.second.both, DIA.second.live.mid, by = c('PLOT', 'drought'))
# join.DIA.second.live.mid$DIA.group <- '30+ cm'
# join.DIA.second.live.mid$Tree_Status <- 'Live'
#
# DIA.second.live <- rbind(join.DIA.second.live.small, join.DIA.second.live.mid)
# rmv <- c('Tree_Status')
# DIA.second.live <- dplyr::select(DIA.second.live, -rmv)
#
# #Dead plots
# DIA.second.dead.small <- subset(trees.second.group, Tree_Status == 'Dead' & DIA.group == '12.7-29 cm')
# colnames(DIA.second.dead.small) <- c("DIA.group", "PLOT", "Tree_Status", "drought", "biomass.dead", "count.dead", "basal_area.dead")
# join.DIA.second.dead.small <- left_join(plots.second.both, DIA.second.dead.small, by = c('PLOT', 'drought'))
# join.DIA.second.dead.small$DIA.group <- '12.7-29 cm'
# join.DIA.second.dead.small$Tree_Status <- 'dead'
#
# DIA.second.dead.mid <- subset(trees.second.group, Tree_Status == 'Dead' & DIA.group == '30+ cm')
# colnames(DIA.second.dead.mid) <- c("DIA.group", "PLOT", "Tree_Status", "drought", "biomass.dead", "count.dead", "basal_area.dead")
# join.DIA.second.dead.mid <- left_join(plots.second.both, DIA.second.dead.mid, by = c('PLOT', 'drought'))
# join.DIA.second.dead.mid$DIA.group <- '30+ cm'
# join.DIA.second.dead.mid$Tree_Status <- 'Dead'
#
# DIA.second.dead <- rbind(join.DIA.second.dead.small, join.DIA.second.dead.mid) #, join.DIA.dead.large)
# DIA.second.dead <- dplyr::select(DIA.second.dead, -rmv)
# DIA.second.join <- left_join(trees.second.sum, DIA.second.live, by = c('PLOT', 'drought', 'DIA.group'))
# DIA.second.all <- left_join(DIA.second.join, DIA.second.dead, by = c('PLOT', 'drought', 'DIA.group'))
#
# #Filling in live plot variables
# DIA.second.all$count.live[is.na(DIA.second.all$count.live)] <- 0
# DIA.second.all$biomass.live[is.na(DIA.second.all$biomass.live)] <- 0
# DIA.second.all$basal_area.live[is.na(DIA.second.all$basal_area.live)] <- 0
#
# #Filling in dead plot variables
# DIA.second.all$count.dead[is.na(DIA.second.all$count.dead)] <- 0
# DIA.second.all$biomass.dead[is.na(DIA.second.all$biomass.dead)] <- 0
# DIA.second.all$basal_area.dead[is.na(DIA.second.all$basal_area.dead)] <- 0
# DIA.second.all$basal_area.mort <- DIA.second.all$basal_area.dead / DIA.second.all$basal_area * 100
# DIA.second.all <- as.data.frame(DIA.second.all)
# # names(DIA.second.all)
# #Summary statistics across plots by DIA
# DIA.second.summary <- DIA.second.all %>% group_by(DIA.group, drought) %>% summarize(
# 																			  biomass.mean = mean(biomass),
# 																			  biomass.sd = sd(biomass),
# 																			  biomass.se = sd(biomass) / sqrt(length(biomass)),
# 																			  count.mean = mean(count),
# 																			  count.sd = sd(count),
# 																			  count.se = sd(count) / sqrt(length(count)),
# 																			  basal_area.mean = mean(basal_area),
# 																			  basal_area.sd = sd(basal_area),
# 																			  basal_area.se = sd(basal_area) / sqrt(length(basal_area)),
# 																			  basal_area.dead.mean = mean(basal_area.dead),
# 																			  basal_area.dead.sd = sd(basal_area.dead),
# 																			  basal_area.dead.se = sd(basal_area.dead) / sqrt(length(basal_area.dead)),
# 																			  mortality.mean = mean(basal_area.mort),
# 																			  mortality.sd = sd(basal_area.mort),
# 																			  mortality.se = sd(basal_area.mort) / sqrt(length(basal_area.mort)),
# 																			  sample.size = length(count)
# 																			  )
# DIA.second.summary <- as.data.frame(DIA.second.summary)
#Full plot summaries
type.second.sum <- trees.second %>% group_by(tree_type, PLOT, drought) %>% summarize(
biomass = sum(live_biomass),
count = sum(count),
basal_area = sum(basal_area)
)
#Adding in zero rows for Tree Types analysis
type.second.live.pine <- subset(trees.second.type, Tree_Status == 'Live' & tree_type == 'pine/fir')
colnames(type.second.live.pine) <- c("tree_type", "PLOT", "Tree_Status", "drought", "biomass.live", "count.live", "basal_area.live")
join.type.second.live.pine <- left_join(plots.second.both, type.second.live.pine, by = c('PLOT', 'drought'))
join.type.second.live.pine$Tree_Status <- 'Live'
type.second.live.other <- subset(trees.second.type, Tree_Status == 'Live' & tree_type == 'other tree')
colnames(type.second.live.other) <- c("tree_type", "PLOT", "Tree_Status", "drought", "biomass.live", "count.live", "basal_area.live")
join.type.second.live.other <- left_join(plots.second.both, type.second.live.other, by = c('PLOT', 'drought'))
join.type.second.live.other$Tree_Status <- 'Live'
type.second.live <- rbind(join.type.second.live.pine, join.type.second.live.other)
type.second.live <- dplyr::select(type.second.live, -rmv)
# trees.second.type
type.second.dead.pine <- subset(trees.second.type, Tree_Status == 'Dead' & tree_type == 'pine/fir')
colnames(type.second.dead.pine) <- c("tree_type", "PLOT", "Tree_Status", "drought", "biomass.dead", "count.dead", "basal_area.dead")
join.type.second.dead.pine <- left_join(plots.second.both, type.second.dead.pine, by = c('PLOT', 'drought'))
join.type.second.dead.pine$Tree_Status <- 'Dead'
# join.type.second.dead.pine
type.second.dead.other <- subset(trees.second.type, Tree_Status == 'Dead' & tree_type == 'other tree')
colnames(type.second.dead.other) <- c("tree_type", "PLOT", "Tree_Status", "drought", "biomass.dead", "count.dead", "basal_area.dead")
join.type.second.dead.other <- left_join(plots.second.both, type.second.dead.other, by = c('PLOT', 'drought'))
join.type.second.dead.other$Tree_Status <- 'Dead'
type.second.dead <- rbind(join.type.second.dead.pine, join.type.second.dead.other)
type.second.dead <- dplyr::select(type.second.dead, -rmv)
type.second.join <- left_join(type.second.sum, type.second.live, by = c('PLOT', 'drought', 'tree_type'))
type.second.all <- left_join(type.second.join, type.second.dead, by = c('PLOT', 'drought', 'tree_type'))
#Filling in live plot variables
type.second.all$count.live[is.na(type.second.all$count.live)] <- 0
type.second.all$biomass.live[is.na(type.second.all$biomass.live)] <- 0
type.second.all$basal_area.live[is.na(type.second.all$basal_area.live)] <- 0
#Filling in dead plot variables
type.second.all$count.dead[is.na(type.second.all$count.dead)] <- 0
type.second.all$biomass.dead[is.na(type.second.all$biomass.dead)] <- 0
type.second.all$basal_area.dead[is.na(type.second.all$basal_area.dead)] <- 0
type.second.all$basal_area.mort <- type.second.all$basal_area.dead / type.second.all$basal_area * 100
type.second.all <- as.data.frame(type.second.all)
#Summaries by tree types
type.second.summary <- type.second.all %>% group_by(tree_type, drought) %>% summarize(
biomass.mean = mean(biomass),
biomass.sd = sd(biomass),
biomass.se = sd(biomass) / sqrt(length(biomass)),
count.mean = mean(count),
count.sd = sd(count),
count.se = sd(count) / sqrt(length(count)),
basal_area.mean = mean(basal_area),
basal_area.sd = sd(basal_area),
basal_area.se = sd(basal_area) / sqrt(length(basal_area.dead)),
basal_area.dead.mean = mean(basal_area.dead),
basal_area.dead.sd = sd(basal_area.dead),
basal_area.dead.se = sd(basal_area.dead) / sqrt(length(basal_area.dead)),
mortality.mean = mean(basal_area.mort),
mortality.sd = sd(basal_area.mort),
mortality.se = sd(basal_area.mort) / sqrt(length(basal_area.mort)),
sample.size = length(count)
)
#Make the summary by tree type a data frame
type.second.summary <- as.data.frame(type.second.summary)
#Add the drought exposure sequence to the script.
type.summary$sequence <- 'Both Droughts'
type.second.summary$sequence <- '2012-2015 Only'
type.summary.all <- rbind(type.summary, type.second.summary)
# Combining the type data for the two drought sequence regions
type.all$sequence <- 'Both Droughts'
type.second.all$sequence <- '2012-2015 Only'
type.both.all <- rbind(type.all, type.second.all)
#Make tree_type a factor
type.both.all$tree_type <- factor(type.both.all$tree_type, levels = c("pine/fir", "other tree"))
p1_texta <- data.frame(label = c("a", "bc", "b", "c"),
sequence   = c('Both Droughts', 'Both Droughts', '2012-2015 Only', '2012-2015 Only'),
y     = c(39.5, 16, 8, 22.5),
x     = c(1, 2, 1, 2)
)
#Letters to indicate sample sizes
p1_textb <- data.frame(label = c("n = 44", "n = 26", "n = 199", "n = 192"),
sequence   = c('Both Droughts', 'Both Droughts', '2012-2015 Only', '2012-2015 Only'),
y     = c(34.5, 11, 3, 17.5),
x     = c(1, 2, 1, 2)
)
#Create the mortality (%) bar chart
p1 <- ggbarplot(filter(type.both.all, tree_type == "pine/fir"), x = "drought", y = "basal_area.mort", fill = "sequence",
ylab = 'Mortality (%)', xlab = "Time Period", order = c("1999-2002", "2012-2015"), position = position_dodge(), #stat = "density",
add = "mean_se" , error.plot = "errorbar", alpha = 0.8) +
guides(color = "none") + theme_bw() +
scale_fill_manual(values = c("#E66100", "#5D3A9B"), name = 'Drought \nSequence',
labels = c("Both Droughts" =  "Both \nDroughts", "2012-2015 Only" = "2012-2015 \nOnly"),
aesthetics = "fill") +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = c(0.75, 0.45), legend.text = element_text(size = 6), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10)) +
geom_text(data = p1_texta, mapping = aes(x = x, y = y, label = label), size = 5) +
geom_text(data = p1_textb, mapping = aes(x = x, y = y, label = label), size = 3) +
geom_text(data = data.frame(label = "Mean \n+/- SE", y = 30, x = 1.25, sequence = 'Both Droughts'), mapping = aes(x=x, y=y, label = label), size = 2) +
facet_grid(~ factor(sequence, levels = c('Both Droughts', '2012-2015 Only')))
p1
