q()
remove.packages('terra')
.libPaths
.libPaths()
remove.packages('terra', "C:/Users/can02/AppData/Local/Programs/R-4.0.2/library")
p <- c('dplyr','tidyr','ggplot2','ggpubr','segmented', 'patchwork','RColorBrewer','gt', 'gtsummary',
'webshot', 'kableExtra', 'broom', 'ggpmisc', 'relaimpo', 'mlr', 'caret', 'stats', 'purrr', 'gstat',
'sp', 'rgdal', 'raster', 'sf', 'elsa', 'nlme')
#Install a package
#Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
setwd('C:/Users/can02/mystuff/subsequent-drought')
#Increase the memory limit for R. Helps with spatially explicit analyses.
# memory.limit()
memory.limit(32000)
# memory.limit()
#Read in csv data for Regression Data Sets
dir_in <- "D:\\Large_Files\\Landsat"
all.ca <- read.csv(file.path(dir_in, "Regression_all_socal_300m_v23.csv"))
all.ca
#Calculate the difference between SPI48 2002 and SPI48 2015
all.ca$dSPI48 <- abs(all.ca$spi48_09_2015 - all.ca$spi48_09_2002)
#Adding a drought sequence column to the data set
all.ca <- all.ca %>% mutate(drought.sequence = case_when((spi48_09_2002 <= -1.5) & (spi48_09_2015 <= -1.5) & (dSPI48 <= 0.5) ~ 'Both Droughts',
(spi48_09_2015 <= -1.5) & (spi48_09_2002 > spi48_09_2015) & (spi48_09_2002 > -1.5) & (dSPI48 > 0.5) ~ '2nd Drought Only',
(spi48_09_2002) <= -1.5 & (spi48_09_2002 < spi48_09_2015) & (spi48_09_2015 > -1.5) & (dSPI48 > 0.5) ~ '1st Drought Only'))
# all.ca %>% dplyr::select(dNDMI_2004)
#Select columns of data
all.ca.1stDrought <- dplyr::select(all.ca, c(system.index, NDMI_1999, dNDMI_2004, dET_2004, dBiomass_2004, PET_4yr_2002, ppt_4yr_2002, tmax_4yr_2002, ET_4yr_2002, ET_1999, biomass_1999, ADS_2004, spi48_09_2002, elevation, latitude, longitude, USFS_zone, drought.sequence))
#Add the year of the 1999-2002 data
all.ca.1stDrought$drought <- '1999-2002'
#Rename the columns
colnames(all.ca.1stDrought) <- c('pixel.id','NDMI', 'dNDMI', 'dET', 'dBiomass', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'ET', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence', 'drought')
#Select columns of the 2012-2015 data
all.ca.2ndDrought <- dplyr::select(all.ca, c(system.index, NDMI_2012, dNDMI_2017, dET_2017, dBiomass_2017, PET_4yr_2015, ppt_4yr_2015, tmax_4yr_2015, ET_4yr_2015, ET_2012, biomass_2012, ADS_2017, spi48_09_2015, elevation, latitude, longitude, USFS_zone, drought.sequence))
#Add the year of the 2012-2015 data
all.ca.2ndDrought$drought <- '2012-2015'
#Rename the columns
colnames(all.ca.2ndDrought) <- c('pixel.id', 'NDMI', 'dNDMI', 'dET', 'dBiomass', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'ET', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence', 'drought')
#Combine all the data in one data frame
all.ca.combined <- rbind(all.ca.1stDrought, all.ca.2ndDrought)
#Translate the region code to text
all.ca.combined$region[all.ca.combined$USFS == 261] <- "Sierra Nevada"
all.ca.combined$region[all.ca.combined$USFS == 262] <- "Southern California"
#Convert the ADS data to categorical mortality or no mortality
all.ca.combined <- all.ca.combined %>% mutate(ADS.cat = case_when(
(ADS) >= 5 ~ 1, #mortality
(ADS) < 5 ~ 0)) #no mortality
#Make drought sequence into dummy categorical variables for statistical analysis
all.ca.sample <- all.ca.combined %>% mutate(sequence.f = case_when(
sequence == 'Both Droughts' ~ 0,
sequence == '2nd Drought Only' ~ 1))
#Make years into dummy variables for statistical analysis
all.ca.sample <- all.ca.sample %>% mutate(drought.f = case_when(
drought == '1999-2002' ~ 0,
drought == '2012-2015' ~ 1))
#directory for raster files
socal_dir <- "D:\\Large_Files\\socal"
sub_dir <- "D:\\Subsequent_Drought"
#Do a spatial plot of the data
# sp::spplot(ca.rast, c('dNDMI'))
# crs(all.ca.combined)
# plot(ca.rast, col = 'dNDMI')
# p_test <- ggplot(data = as.data.frame(v), mapping = aes(x = dist, y = gamma)) + geom_point() + ylim(c(0, 0.003)) + theme_bw() +
# xlab('Distance (km)') + ylab('Semivariance')
# p_test
# ggsave(filename = 'SFig_17_dNDMI_semivariogram.png', height=8, width= 12, units = 'cm', dpi=900)
# all.ca.combined
#Make the data a spatial data frame
# summary(all.ca.sample)
all.ca.filter <- all.ca.sample %>% filter(!is.na(sequence.f)) #Filter out NA values
coordinates(all.ca.filter) <- ~ latitude + longitude
raster::crs(all.ca.filter) <- raster::crs("+proj=longlat")
#Check for spatial autocorrelation
data.spatialCor.lm <- lm(dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, all.ca.filter)
png(file = 'SFig_21_analysis_of_model.png', width=12, height=12, units="cm", res=900)
par(mfrow = c(2, 2))
plot(data.spatialCor.lm, which = 1:4)
dev.off()
data.spatialCor$Resid <- rstandard(data.spatialCor.lm)
# coordinates(data.spatialCor) <- ~LAT + LONG  #effectively convert the data into a spatial data frame
bubble(data.spatialCor, "Resid")
#Do the GLS model without incorporating the lats and longs
data.spatialCor.gls <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter, method = "REML")
data.spatialCor.gls
all.ca.filter$Resid <- rstandard(data.spatialCor.lm)
# coordinates(data.spatialCor) <- ~LAT + LONG  #effectively convert the data into a spatial data frame
bubble(all.ca.filter, "Resid")
all.ca.filter
all.ca.filter %>% summary()
ggplot(data = all.ca.filter) + geom_point(mapping = aes(x = latitude, y = longitude, size = Resid), alpha = 0.2)
ggplot(data = all.ca.filter) + coord_sf() +
geom_point(mapping = aes(x = latitude, y = longitude, size = Resid), alpha = 0.2)
ggplot() + coord_sf() +
geom_point(data = all.ca.filter, mapping = aes(x = latitude, y = longitude, size = Resid), alpha = 0.2)
ggplot() + coord_sf() +
geom_point(data = data.frame(all.ca.filter), mapping = aes(x = latitude, y = longitude, size = Resid), alpha = 0.2)
ggplot() + coord_sf() +
geom_point(data = as.data.frame(all.ca.filter), mapping = aes(x = latitude, y = longitude, size = Resid), alpha = 0.2)
ggplot() + coord_sf() +
geom_point(data = as.data.frame(all.ca.filter), mapping = aes(y = latitude, x = longitude, color = Resid), alpha = 0.2)
ggplot() + coord_sf() +
geom_point(data = as.data.frame(all.ca.filter), mapping = aes(y = latitude, x = longitude, color = Resid), alpha = 0.2) +
scale_color_viridis()
ggplot() + coord_sf() +
geom_point(data = as.data.frame(all.ca.filter), mapping = aes(y = latitude, x = longitude, color = Resid), alpha = 0.2, size = 0.1) +
scale_color_viridis_c()
ggsave(filename = 'SFig_spatial_model_residuals.png', height=15, width= 10, units = 'cm', dpi=900)
data.spatialCor.gls <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter, method = "REML")
data.spatialCor.gls
data.spatialCor.glsExp <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corExp(form = ~latitude + longitude, nugget = TRUE),
method = "REML")
data.spatialCor.glsGaus <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corGaus(form = ~latitude + longitude, nugget = TRUE),
method = "REML")
data.spatialCor.glsLin <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corLin(form = ~latitude + longitude, nugget = TRUE),
method = "REML")
data.spatialCor.glsRatio <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corRatio(form = ~latitude + longitude, nugget = TRUE),
method = "REML")
data.spatialCor.glsSpher <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corSpher(form = ~latitude + longitude, nugget = TRUE),
method = "REML")
data.spatialCor.glsExp <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corExp(form = ~latitude + longitude),
method = "REML")
data.spatialCor.glsExp <- gls(model = dNDMI ~ PET_4yr, data = all.ca.filter,
correlation = corExp(form = ~latitude + longitude),
method = "REML")
data.spatialCor.glsExp <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corExp(form = ~latitude + longitude),
method = "ML")
data.spatialCor.glsGaus <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corGaus(form = ~latitude + longitude, nugget = TRUE),
method = "REML")
data.spatialCor.glsGaus <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corGaus(form = ~latitude + longitude),
method = "ML")
data.spatialCor.glsExp <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corExp(form = ~latitude + longitude | USFS, nugget = TRUE),
method = "REML")
data.spatialCor.glsExp <- gls(model = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
correlation = corExp(form = ~latitude + longitude | drought.f / sequence.f, nugget = TRUE),
method = "REML")
all.ca.filter.lme <- lme(fixed = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
random = ~ latitude + longitude, method = "REML")
all.ca.filter.lme <- lme(fixed = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass, data = all.ca.filter,
random = ~ 1 | USFS, method = "REML")
all.ca.filter.lme
summary(all.ca.filter.lme)
all.ca.filter$Resid.lme <- rstandard(all.ca.filter.lme)
all.ca.filter %>% summary()
# coordinates(data.spatialCor) <- ~LAT + LONG  #effectively convert the data into a spatial data frame
# bubble(all.ca.filter, "Resid")
ggplot() + coord_sf() +
p_map <- geom_point(data = as.data.frame(all.ca.filter), mapping = aes(y = latitude, x = longitude, color = Resid.lme), alpha = 0.2, size = 0.1) +
scale_color_viridis_c()
ggsave(filename = 'SFig_lme_model_residuals.png', height=15, width= 10, units = 'cm', dpi=900)
all.ca.filter$Resid.lme <- predict(all.ca.filter.lme)
all.ca.filter$Resid.lme <- residuals(all.ca.filter.lme)
all.ca.filter %>% summary()
ggplot() + coord_sf() +
p_map <- geom_point(data = as.data.frame(all.ca.filter), mapping = aes(y = latitude, x = longitude, color = Resid.lme), alpha = 0.2, size = 0.1) +
scale_color_viridis_c()
p_map <- ggplot() + coord_sf() +
geom_point(data = as.data.frame(all.ca.filter), mapping = aes(y = latitude, x = longitude, color = Resid.lme), alpha = 0.2, size = 0.1) +
scale_color_viridis_c()
p_map
ggsave(filename = 'SFig_lme_model_residuals.png', height=15, width= 10, units = 'cm', dpi=900)
plot(gstat::variogram(residuals(all.ca.filter.lme, "normalized") ~
1, data = all.ca.filter, cutoff = 5), xlab = 'Distance (km)', ylab = 'Semivariance', main = 'Variogram')
plot(gstat::variogram(residuals(all.ca.filter.lme) ~
1, data = all.ca.filter, cutoff = 5), xlab = 'Distance (km)', ylab = 'Semivariance', main = 'Variogram')
ggsave(filename = 'SFig_lme_semiveriogram.png', height=15, width= 10, units = 'cm', dpi=900)
all.ca.filter.lme <- lme(fixed = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = all.ca.filter,
random = ~ 1 | latitude + longitude, #Trying out the random effects
method = "REML")
all.ca.filter.lme <- lme(fixed = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = all.ca.filter,
random = ~ latitude + longitude, #Trying out the random effects
method = "REML")
all.ca.filter.lme <- lme(fixed = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ latitude + longitude, #Trying out the random effects
method = "REML")
summary(all.ca.filter.lme)
corGaus(form = ~latitude +longitude, method = "ML", data = all.ca.filter)
corGaus(form = ~latitude +longitude, data = all.ca.filter)
corGaus(form = ~latitude +longitude, nugget = TRUE)
Initialize(corGaus, all.ca.filter)
Initialize(object = corGaus, data = all.ca.filter)
Initialize(object = corGaus, data = as.data.frame(all.ca.filter))
update(all.ca.fiter.lme, corGaus)
all.ca.filter.lme <- lme(fixed = dNDMI ~ drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
#Trying out the random effects
method = "ML")
all.ca.filter.lme <- lme(fixed = dNDMI ~ PET_4yr,
data = as.data.frame(all.ca.filter),
#Trying out the random effects
method = "ML")
all.ca.filter.lme <- lme(fixed = dNDMI ~ PET_4yr,
data = as.data.frame(all.ca.filter),
random = ~ 1,
#Trying out the random effects
method = "ML")
summary(all.ca.filter)
all.ca.filter.lme <- lme(fixed = dNDMI ~ PET_4yr,
data = as.data.frame(all.ca.filter),
random = ~ 1|pixel.id,
#Trying out the random effects
method = "ML")
summary(all.ca.filter.lme)
all.ca.filter.lme <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1|pixel.id,
#Trying out the random effects
method = "ML")
summary(all.ca.filter.lme)
all.ca.filter.corGaus <- update(all.ca.fiter.lme, corGaus)
all.ca.filter.corGaus <- update(all.ca.filter.lme, corGaus)
corGaus(form = ~latitude +longitude, nugget = TRUE)
all.ca.filter.corGaus <- update(all.ca.filter.lme, corGaus(form = ~latitude +longitude, nugget = TRUE))
summary(all.ca.filter.corGaus)
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1|pixel.id, #Trying out the random effects
correlation = corGaus(form = ~latitude +longitude, nugget = TRUE), #Add spatial correlation
method = "ML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1|pixel.id, #Trying out the random effects
correlation = corGaus(form = ~drought.f | latitude +longitude, nugget = TRUE), #Add spatial correlation
method = "ML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1|pixel.id, #Trying out the random effects
correlation = corGaus(form = ~drought.f * sequence | latitude +longitude, nugget = TRUE), #Add spatial correlation
method = "ML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~latitude +longitude, nugget = TRUE), #Add spatial correlation
method = "ML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~ drought.f | latitude + longitude, nugget = TRUE), #Add spatial correlation
method = "ML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~ pixel.id | latitude + longitude, nugget = TRUE), #Add spatial correlation
method = "ML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~ drought.f / pixel.id | latitude + longitude, nugget = TRUE), #Add spatial correlation
method = "ML")
all.ca.filter.lme <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
method = "REML")
summary(all.ca.filter.lme)
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~ drought.f / pixel.id | latitude + longitude, nugget = TRUE), #Add spatial correlation
method = "ML")
all.ca.filter.lme <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
method = "REML")
ll.ca.filter.lme <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
method = "ML")
all.ca.filter.lme <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
method = "REML")
all.ca.filter.lme <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1 + drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
method = "REML")
summary(all.ca.filter.lme)
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1 + drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~ latitude + longitude, nugget = TRUE), #Add spatial correlation
method = "REML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1 + drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~ latitude + longitude|drought.f, nugget = TRUE), #Add spatial correlation
method = "REML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1 + drought.f | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~ latitude + longitude | pixel.id / drought.f, nugget = TRUE), #Add spatial correlation
method = "REML")
summary(all.ca.filter.corGaus)
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1 | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~ latitude + longitude | pixel.id / drought.f, nugget = TRUE), #Add spatial correlation
method = "REML")
all.ca.filter.lme <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1 | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
method = "REML")
summary(all.ca.filter.lme)
all.ca.filter.gls.corGaus <- gls(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
correlation = corGaus(form = ~ latitude + longitude | drought.f, nugget = TRUE),
method = "REML")
all.ca.filter.gls.corGaus <- gls(model = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
correlation = corGaus(form = ~ latitude + longitude | drought.f, nugget = TRUE),
method = "REML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
na.action = na.omit,
random = ~ 1 | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corGaus(form = ~ latitude + longitude | pixel.id / drought.f, nugget = TRUE), #Add spatial correlation
method = "REML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
na.action = na.omit,
random = ~ 1 | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corExp(form = ~ latitude + longitude | pixel.id / drought.f, nugget = TRUE), #Add spatial correlation
method = "REML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
na.action = na.omit,
#random = ~ 1 | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corExp(form = ~ latitude + longitude | pixel.id / drought.f, nugget = TRUE), #Add spatial correlation
method = "REML")
summary(all.ca.filter.corGaus)
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + biomass,
data = as.data.frame(all.ca.filter),
na.action = na.omit,
random = ~ 1, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corExp(form = ~ latitude + longitude | pixel.id / drought.f, nugget = TRUE), #Add spatial correlation
method = "REML")
summary(all.ca.filter.corGaus)
all.ca.filter.lme <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1 | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
method = "ML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
na.action = na.omit,
random = ~ 1 | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corExp(form = ~ latitude + longitude | pixel.id / drought.f), #Add spatial correlation
method = "REML")
all.ca.filter.corGaus <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
na.action = na.omit,
random = ~ 1 | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
correlation = corExp(form = ~ latitude + longitude | drought.f), #Add spatial correlation
method = "REML")
summary(all.ca.filter.corGaus)
all.ca.filter.lme <- lme(fixed = dNDMI ~  drought.f * sequence.f + PET_4yr + tmax_4yr + biomass,
data = as.data.frame(all.ca.filter),
random = ~ 1 | pixel.id, #Trying out the random effects, this is within subjects, there are two periods for each pixel
method = "ML")
summary(all.ca.filter.lme)
png(file = 'SFig_gstat_lme_semivariogram_300m.png', width=12, height=8, units="cm", res=900)
plot(gstat::variogram(residuals(all.ca.filter.lme, type = "normalized") ~
1, data = all.ca.filter, cutoff = 5), xlab = 'Distance (km)', ylab = 'Semivariance', main = 'Variogram')
dev.off()
