stat_cor(data = sites.join %>% filter(veg.type == 'forest'), label.x.npc = 0.18, label.y.npc = 0.85,
aes(x = NDVI.mean, y = ET, label = paste(..rr.label.., expression('ET = 132.223 * e'^'(2.579 * NDVI)'), sep = "~`,`~")),
size = 3.5, r.accuracy = 0.001, p.accuracy = 0.001, color = 'dark green') +
theme(axis.text.x = element_text(size = 9), axis.text.y = element_text(size = 9), axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
legend.position = 'right', legend.background = element_rect(colour = NA, fill = NA), legend.title.align = 0.5,
legend.key = element_rect(fill = NA), legend.title = element_text(size = 6), legend.text = element_text(size = 5)) +
xlab('NDVI') + ylab(expression('ET (mm yr'^-1*')'))
p1
#Add the legend to the bottom of the figure
f1 <- ggarrange(p1, ncol = 1, nrow = 1, common.legend = FALSE)
f1
#Save the figure as a .PNG file
ggsave(filename = 'SupFig13_Forest_NDVI_ET_scaling.png', height=10, width=16, units = 'cm', dpi=900)
p <- c('dplyr','tidyr','ggplot2','ggpubr','viridis','segmented', 'patchwork','RColorBrewer', 'broom', 'svglite', 'ggpmisc')
#If necessary install packages
# Load packages
lapply(p,require,character.only=TRUE)
dir_input <- "D:\\Large_Files\\tower_data\\Input"
dir_output <- "D:\\Large_Files\\tower_data\\Output"
## Navigate to the correct directory and run the program
setwd("C:\\Users\\can02\\mystuff\\subsequent-drought")
#Load annual data from Flux Tower sites
site1 <- read.csv(file.path(dir_output, "Grass_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
site2 <- read.csv(file.path(dir_output, "James_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
site3 <- read.csv(file.path(dir_output, "LowDesert_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
site4 <- read.csv(file.path(dir_output, "P301_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
site5 <- read.csv(file.path(dir_output, "PinyonBurn_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
site6 <- read.csv(file.path(dir_output, "Pinyon_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
site7 <- read.csv(file.path(dir_output, "SJER_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
site8 <- read.csv(file.path(dir_output, "Sage_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
site9 <- read.csv(file.path(dir_output, "Shorthair_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
site10 <- read.csv(file.path(dir_output, "Soaproot_Annual_EClos_Hinojo.csv"), header = TRUE, na.strings = "NaN")
#Combine all the flux tower data into one dataframe
flux.sites <- rbind(site1, site2, site3, site4, site5, site6, site7, site8, site9, site10)
#Add site labels for the flux tower sites
flux.sites$veg.type <- recode(.x=flux.sites$ID, 'Grassland US-SCg' = 'non-forest', 'OakPine Forest US-SCf' = 'forest', 'Desert US-SCd' = 'non-forest', 'Sierran Mixed Conifer US-CZ3' = 'forest', 'PinyonJuniper US-SCw' = 'forest', 'OakPine Woodland US-CZ1' = 'forest', 'Coastal Sage US-SCs' = 'non-forest',
'Subalpine Forest US-CZ4' = 'forest', 'Ponderosa Pine Forest US-CZ2' = 'forest', 'Desert Chaparral US-SCc' = 'non-forest')
flux.sites$Site <- recode(.x=flux.sites$ID, 'Grassland US-SCg' = 'US-SCg', 'OakPine Forest US-SCf' = 'US-SCf', 'Desert US-SCd' = 'US-SCd', 'Sierran Mixed Conifer US-CZ3' = 'US-CZ3', 'PinyonJuniper US-SCw' = 'US-SCw', 'OakPine Woodland US-CZ1' = 'US-CZ1', 'Coastal Sage US-SCs' = 'US-SCs',
'Subalpine Forest US-CZ4' = 'US-CZ4', 'Ponderosa Pine Forest US-CZ2' = 'US-CZ2', 'Desert Chaparral US-SCc' = 'US-SCc')
flux.sites$eco.type <- recode(.x=flux.sites$ID, 'Grassland US-SCg' = 'Grassland, US-SCg', 'OakPine Forest US-SCf' = 'Oak Pine Forest, US-SCf', 'Desert US-SCd' = 'Desert, US-SCd', 'Sierran Mixed Conifer US-CZ3' = 'Sierran Mixed Conifer, US-CZ3', 'PinyonJuniper US-SCw' = 'Pinyon Juniper, US-SCw', 'OakPine Woodland US-CZ1' = 'Oak Pine Woodland, US-CZ1', 'Coastal Sage US-SCs' = 'Coastal Sage, US-SCs',
'Subalpine Forest US-CZ4' = 'Subalpine Forest, US-CZ4', 'Ponderosa Pine Forest US-CZ2' = 'Ponderosa Pine Forest, US-CZ2', 'Desert Chaparral US-SCc' = 'Desert Chaparral, US-SCc')
#Remove years with missing data and when data wasn't working
flux.sites <- subset(flux.sites, n_days >= 300 & ET > 0)
#Load Landsat data for flux tower sites
ndvi.sites <- read.csv(file.path(dir_input, "UCIupwind_pixels_NDVI_met_30m.csv"), header = TRUE, na.strings = "NaN")
#Calculate the mean NDVI for the 9 upwind Landsat pixels at each flux tower site
ndvi.sites.group <- ndvi.sites %>% group_by(Site,year) %>%
summarize(NDVI.mean = mean(NDVI))
#Make the Landsat data a data frame
ndvi.sites.group <- as.data.frame(ndvi.sites.group)
#Make a column for wYEAR
ndvi.sites.group$wYEAR <- ndvi.sites.group$year
#Join the Landsat and Flux tower data frames by Site and wYEAR
sites.join <- inner_join(ndvi.sites.group,flux.sites,by=c("Site","wYEAR"))
# Create an exponential model.
# Estimate the rest parameters using a linear model
model.0 <- lm(log(ET) ~ NDVI.mean, data=sites.join)
alpha.0 <- exp(coef(model.0)[1])
beta.0 <- coef(model.0)[2]
# Create the model starting parameters
start <- list(alpha = alpha.0, beta = beta.0)
#Create the exponential fit between ET and NDVI
nlsFit <-
nls(formula = ET~alpha*exp(NDVI.mean*beta),
start = start,
data = sites.join)
#Create the exponential fit between ET and NDVI, for forested sites
nlsFit.forest <-
nls(formula = ET~alpha*exp(NDVI.mean*beta),
start = start,
data = sites.join %>% filter(Site %in% c('US-CZ1', 'US-CZ2', 'US-CZ3', 'US-CZ4', 'US-SCw', 'US-SCf')))
nlsFit.forest
#### Create scatter plot with exponential fit
sites.join$Site <- factor(sites.join$Site)
sites.join$eco.type <- factor(sites.join$eco.type)
#### Create scatter plot with exponential fit for just forested sites
p1 <- ggplot() +
scale_shape_manual(values=1:10) + theme_bw() +
scale_color_manual(values = c('dark green', 'black'), labels = c('Forest', 'Shrub/Grass')) +
guides(color = 'none', shape = guide_legend(title = 'Site', ncol = 1)) +
geom_point(data = sites.join, #%>% filter(Site %in% c('US-CZ1', 'US-CZ2', 'US-CZ3', 'US-CZ4', 'US-SCw', 'US-SCf')),
mapping = aes(x = NDVI.mean, y = ET, color = veg.type, shape = eco.type), size = 2) +
#Add the full ET line
geom_smooth(data = sites.join,
mapping = aes(x = NDVI.mean, y = ET), linetype = 'dashed',
method = nls, method.args = list(formula = y ~ alpha*exp(x*beta), start = start), se=FALSE, color = 'black') +
geom_text_npc(data = data.frame(label = "All Ecosystems:", y = 0.96, x = 0.02), mapping = aes(npcx=x, npcy=y, label = label),
size = 3.5, color = 'black') +
stat_cor(data = sites.join, label.x.npc = 0.24, label.y.npc = 1,
aes(x = NDVI.mean, y = ET, label = paste(..rr.label.., expression('ET = 125.5345 * e'^'(2.6148 * NDVI)'), sep = "~`,`~")),
size = 3.5, color = 'black', r.accuracy = 0.001, p.accuracy = 0.001) +
#Add the forest only ET line
geom_smooth(data = sites.join %>% filter(veg.type == 'forest'),
mapping = aes(x = NDVI.mean, y = ET), linetype = 'dotdash',
method = nls, method.args = list(formula = y ~ alpha*exp(x*beta), start = start), se=FALSE, color = 'dark green') +
geom_text_npc(data = data.frame(label = "Forest Only:", y = 0.82, x = 0.02), mapping = aes(npcx=x, npcy=y, label = label),
size = 3.5, color = 'dark green') +
stat_cor(data = sites.join %>% filter(veg.type == 'forest'), label.x.npc = 0.18, label.y.npc = 0.85,
aes(x = NDVI.mean, y = ET, label = paste(..rr.label.., expression('ET = 132.223 * e'^'(2.579 * NDVI)'), sep = "~`,`~")),
size = 3.5, r.accuracy = 0.001, p.accuracy = 0.001, color = 'dark green') +
theme(axis.text.x = element_text(size = 9), axis.text.y = element_text(size = 9), axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
legend.position = 'right', legend.background = element_rect(colour = NA, fill = NA), legend.title.align = 0.5,
legend.key = element_rect(fill = NA), legend.title = element_text(size = 6), legend.text = element_text(size = 5)) +
xlab('NDVI') + ylab(expression('ET (mm yr'^-1*')'))
p1
#Add the legend to the bottom of the figure
f1 <- ggarrange(p1, ncol = 1, nrow = 1, common.legend = FALSE)
f1
#Save the figure as a .PNG file
ggsave(filename = 'SupFig13_Forest_NDVI_ET_scaling.png', height=10, width=16, units = 'cm', dpi=900)
p1 <- ggplot() +
scale_shape_manual(values=1:10) + theme_bw() +
scale_color_manual(values = c('black', 'dark green', 'black', 'dark green', 'dark green', 'dark green', 'black', 'dark green', 'dark green', 'black'),
labels = c('Grassland, US-SCg', 'Oak Pine Forest, US-SCf', 'Desert, US-SCd', 'Sierran Mixed Conifer, US-CZ3', 'Pinyon Juniper, US-SCw', 'Oak Pine Woodland, US-CZ1', 'Coastal Sage, US-SCs',
'Subalpine Forest, US-CZ4', 'Ponderosa Pine Forest, US-CZ2', 'Desert Chaparral, US-SCc')) +
guides(color = guide_legend(title = 'Site', ncol = 1), shape = guide_legend(title = 'Site', ncol = 1)) +
geom_point(data = sites.join, #%>% filter(Site %in% c('US-CZ1', 'US-CZ2', 'US-CZ3', 'US-CZ4', 'US-SCw', 'US-SCf')),
mapping = aes(x = NDVI.mean, y = ET, color = eco.type, shape = eco.type), size = 2) +
#Add the full ET line
geom_smooth(data = sites.join,
mapping = aes(x = NDVI.mean, y = ET), linetype = 'dashed',
method = nls, method.args = list(formula = y ~ alpha*exp(x*beta), start = start), se=FALSE, color = 'black') +
geom_text_npc(data = data.frame(label = "All Ecosystems:", y = 0.96, x = 0.02), mapping = aes(npcx=x, npcy=y, label = label),
size = 3.5, color = 'black') +
stat_cor(data = sites.join, label.x.npc = 0.24, label.y.npc = 1,
aes(x = NDVI.mean, y = ET, label = paste(..rr.label.., expression('ET = 125.5345 * e'^'(2.6148 * NDVI)'), sep = "~`,`~")),
size = 3.5, color = 'black', r.accuracy = 0.001, p.accuracy = 0.001) +
#Add the forest only ET line
geom_smooth(data = sites.join %>% filter(veg.type == 'forest'),
mapping = aes(x = NDVI.mean, y = ET), linetype = 'dotdash',
method = nls, method.args = list(formula = y ~ alpha*exp(x*beta), start = start), se=FALSE, color = 'dark green') +
geom_text_npc(data = data.frame(label = "Forest Only:", y = 0.82, x = 0.02), mapping = aes(npcx=x, npcy=y, label = label),
size = 3.5, color = 'dark green') +
stat_cor(data = sites.join %>% filter(veg.type == 'forest'), label.x.npc = 0.18, label.y.npc = 0.85,
aes(x = NDVI.mean, y = ET, label = paste(..rr.label.., expression('ET = 132.223 * e'^'(2.579 * NDVI)'), sep = "~`,`~")),
size = 3.5, r.accuracy = 0.001, p.accuracy = 0.001, color = 'dark green') +
theme(axis.text.x = element_text(size = 9), axis.text.y = element_text(size = 9), axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
legend.position = 'right', legend.background = element_rect(colour = NA, fill = NA), legend.title.align = 0.5,
legend.key = element_rect(fill = NA), legend.title = element_text(size = 6), legend.text = element_text(size = 5)) +
xlab('NDVI') + ylab(expression('ET (mm yr'^-1*')'))
p1
#Add the legend to the bottom of the figure
f1 <- ggarrange(p1, ncol = 1, nrow = 1, common.legend = FALSE)
f1
#Save the figure as a .PNG file
ggsave(filename = 'SFig13_Forest_NDVI_ET_scaling.png', height=10, width=16, units = 'cm', dpi=900)
p1 <- ggplot() +
scale_shape_manual(name = 'Site', values=1:10) + theme_bw() +
scale_color_manual(name = 'Site', values = c('black', 'dark green', 'black', 'dark green', 'dark green', 'dark green', 'black', 'dark green', 'dark green', 'black')) + #,
# labels = c('Grassland, US-SCg', 'Oak Pine Forest, US-SCf', 'Desert, US-SCd', 'Sierran Mixed Conifer, US-CZ3', 'Pinyon Juniper, US-SCw', 'Oak Pine Woodland, US-CZ1', 'Coastal Sage, US-SCs',
#          'Subalpine Forest, US-CZ4', 'Ponderosa Pine Forest, US-CZ2', 'Desert Chaparral, US-SCc')) +
# guides(color = guide_legend(title = 'Site', ncol = 1), shape = guide_legend(title = 'Site', ncol = 1)) +
geom_point(data = sites.join, #%>% filter(Site %in% c('US-CZ1', 'US-CZ2', 'US-CZ3', 'US-CZ4', 'US-SCw', 'US-SCf')),
mapping = aes(x = NDVI.mean, y = ET, color = eco.type, shape = eco.type), size = 2) +
#Add the full ET line
geom_smooth(data = sites.join,
mapping = aes(x = NDVI.mean, y = ET), linetype = 'dashed',
method = nls, method.args = list(formula = y ~ alpha*exp(x*beta), start = start), se=FALSE, color = 'black') +
geom_text_npc(data = data.frame(label = "All Ecosystems:", y = 0.96, x = 0.02), mapping = aes(npcx=x, npcy=y, label = label),
size = 3.5, color = 'black') +
stat_cor(data = sites.join, label.x.npc = 0.24, label.y.npc = 1,
aes(x = NDVI.mean, y = ET, label = paste(..rr.label.., expression('ET = 125.5345 * e'^'(2.6148 * NDVI)'), sep = "~`,`~")),
size = 3.5, color = 'black', r.accuracy = 0.001, p.accuracy = 0.001) +
#Add the forest only ET line
geom_smooth(data = sites.join %>% filter(veg.type == 'forest'),
mapping = aes(x = NDVI.mean, y = ET), linetype = 'dotdash',
method = nls, method.args = list(formula = y ~ alpha*exp(x*beta), start = start), se=FALSE, color = 'dark green') +
geom_text_npc(data = data.frame(label = "Forest Only:", y = 0.82, x = 0.02), mapping = aes(npcx=x, npcy=y, label = label),
size = 3.5, color = 'dark green') +
stat_cor(data = sites.join %>% filter(veg.type == 'forest'), label.x.npc = 0.18, label.y.npc = 0.85,
aes(x = NDVI.mean, y = ET, label = paste(..rr.label.., expression('ET = 132.223 * e'^'(2.579 * NDVI)'), sep = "~`,`~")),
size = 3.5, r.accuracy = 0.001, p.accuracy = 0.001, color = 'dark green') +
theme(axis.text.x = element_text(size = 9), axis.text.y = element_text(size = 9), axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
legend.position = 'right', legend.background = element_rect(colour = NA, fill = NA), legend.title.align = 0.5,
legend.key = element_rect(fill = NA), legend.title = element_text(size = 6), legend.text = element_text(size = 5)) +
xlab('NDVI') + ylab(expression('ET (mm yr'^-1*')'))
p1
#Add the legend to the bottom of the figure
f1 <- ggarrange(p1, ncol = 1, nrow = 1, common.legend = FALSE)
f1
#Save the figure as a .PNG file
ggsave(filename = 'SFig13_Forest_NDVI_ET_scaling.png', height=10, width=16, units = 'cm', dpi=900)
p1 <- ggplot() +
scale_shape_manual(name = 'Site', values=1:10) + theme_bw() +
scale_color_manual(name = 'Site', values = c('black', 'black', 'black', 'black', 'dark green', 'dark green', 'dark green', 'dark green', 'dark green', 'dark green')) + #,
# labels = c('Grassland, US-SCg', 'Oak Pine Forest, US-SCf', 'Desert, US-SCd', 'Sierran Mixed Conifer, US-CZ3', 'Pinyon Juniper, US-SCw', 'Oak Pine Woodland, US-CZ1', 'Coastal Sage, US-SCs',
#          'Subalpine Forest, US-CZ4', 'Ponderosa Pine Forest, US-CZ2', 'Desert Chaparral, US-SCc')) +
# guides(color = guide_legend(title = 'Site', ncol = 1), shape = guide_legend(title = 'Site', ncol = 1)) +
geom_point(data = sites.join, #%>% filter(Site %in% c('US-CZ1', 'US-CZ2', 'US-CZ3', 'US-CZ4', 'US-SCw', 'US-SCf')),
mapping = aes(x = NDVI.mean, y = ET, color = eco.type, shape = eco.type), size = 2) +
#Add the full ET line
geom_smooth(data = sites.join,
mapping = aes(x = NDVI.mean, y = ET), linetype = 'dashed',
method = nls, method.args = list(formula = y ~ alpha*exp(x*beta), start = start), se=FALSE, color = 'black') +
geom_text_npc(data = data.frame(label = "All Ecosystems:", y = 0.96, x = 0.02), mapping = aes(npcx=x, npcy=y, label = label),
size = 3.5, color = 'black') +
stat_cor(data = sites.join, label.x.npc = 0.24, label.y.npc = 1,
aes(x = NDVI.mean, y = ET, label = paste(..rr.label.., expression('ET = 125.5345 * e'^'(2.6148 * NDVI)'), sep = "~`,`~")),
size = 3.5, color = 'black', r.accuracy = 0.001, p.accuracy = 0.001) +
#Add the forest only ET line
geom_smooth(data = sites.join %>% filter(veg.type == 'forest'),
mapping = aes(x = NDVI.mean, y = ET), linetype = 'dotdash',
method = nls, method.args = list(formula = y ~ alpha*exp(x*beta), start = start), se=FALSE, color = 'dark green') +
geom_text_npc(data = data.frame(label = "Forest Only:", y = 0.82, x = 0.02), mapping = aes(npcx=x, npcy=y, label = label),
size = 3.5, color = 'dark green') +
stat_cor(data = sites.join %>% filter(veg.type == 'forest'), label.x.npc = 0.18, label.y.npc = 0.85,
aes(x = NDVI.mean, y = ET, label = paste(..rr.label.., expression('ET = 132.223 * e'^'(2.579 * NDVI)'), sep = "~`,`~")),
size = 3.5, r.accuracy = 0.001, p.accuracy = 0.001, color = 'dark green') +
theme(axis.text.x = element_text(size = 9), axis.text.y = element_text(size = 9), axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
legend.position = 'right', legend.background = element_rect(colour = NA, fill = NA), legend.title.align = 0.5,
legend.key = element_rect(fill = NA), legend.title = element_text(size = 6), legend.text = element_text(size = 5)) +
xlab('NDVI') + ylab(expression('ET (mm yr'^-1*')'))
p1
#Add the legend to the bottom of the figure
f1 <- ggarrange(p1, ncol = 1, nrow = 1, common.legend = FALSE)
f1
#Save the figure as a .PNG file
ggsave(filename = 'SFig13_Forest_NDVI_ET_scaling.png', height=10, width=16, units = 'cm', dpi=900)
f1 <- ggarrange(p1, ncol = 1, nrow = 1, common.legend = FALSE)
f1
#Save the figure as a .PNG file
ggsave(filename = 'SFig13_Forest_NDVI_ET_scaling.png', height=10, width=17, units = 'cm', dpi=900)
p4 <- ggbarplot(all.forest.type %>% filter(pltID %in% plots & tree_type != 'other conifer' & tree_type != 'deciduous'),
x = "time.period", y = "BAA.all.sum", position = position_dodge(), fill = 'tree_type.f', color = "sequence",
add = "mean_se" , error.plot = "errorbar", alpha = 0.8, ylab = expression('Basal Area (m'^2*' ha'^-1*')'),
xlab = NULL, order = c('1999-2002', '2012-2015')) +
theme_bw() + guides(color = 'none', fill = guide_legend(title = "Tree Type",  label.position = "bottom", title.position="top", title.hjust = 0.5)) +
scale_color_manual(values = c("black", "black"), aesthetics = "color") + labs(tag =("d)")) +
scale_fill_discrete(labels = c("pine" = "Pine", "fir" = "Fir", "juniper" = "Juniper", "oak" = "Oak", "cedar" = "Cedar")) +
theme(legend.background = element_rect(colour = NA, fill = NA),
legend.position = c(0.3, 0.75), legend.text = element_text(size = 8, angle = 45, vjust = 0.8), legend.title = element_text(size = 8),
legend.direction = "horizontal",axis.text.x = element_text(size = 10, color = 'black'), axis.title.x = element_blank(),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
strip.background = element_blank(), strip.text.x = element_blank(), plot.margin = unit(c(2.5,0,0,5), "pt"),
panel.spacing = unit(20, "pt"), plot.tag.position = c(0.54, 0.96), plot.tag = element_text(face = "bold")) +
scale_x_discrete(labels = c("Response During\n1st Period", "Response During\n2nd Period")) +
geom_text(data = p4_texta, mapping = aes(x = x, y = y, label = label), size = 4) +
facet_grid(~ factor(sequence, levels = c('Both Droughts', '2nd Drought Only')))
p4
f2 <- ggarrange(p3, p4, ncol = 1, labels = c('a)', 'c)'), align = "v", nrow = 2, heights = c(1, 0.95), common.legend = FALSE)
f2
ggsave(filename = 'SFig6_basal_area_boxplot.png', height=14, width=16, units = 'cm', dpi=900)
aov.dead <- aov(data = join.summary %>% filter(pltID %in% plots),
BAA.dead.sum ~ time.period * sequence)
#Tukey HSD
dead.tHSD <- TukeyHSD(aov.dead)
#Basal Area Tables
#ANOVA and Tukey HSD for total basal area sequence and time period
all.forest.plot <- all.forest %>% filter(pltID %in% plots) %>% group_by(time.period, sequence, pltID) %>%
summarize(BAA.all.sum = sum(BAA.all), BAA.live = sum(BAA),
BAA.dead.sum = sum(BAA.dead),
BAA.mort = sum(BAA.dead) / sum(BAA.all) * 100)
#Summarize the overall data
conifer.forest.all.summary <- all.forest.plot %>%
mutate(live = case_when(BAA.all.sum > 0 ~ 1, BAA.all.sum == 0 ~ 0),
dead = case_when(BAA.mort > 0 ~ 1, BAA.mort == 0 | is.na(BAA.mort) ~ 0)) %>%
group_by(time.period, sequence) %>%
summarize(BAA.all.mean = mean(BAA.all.sum), BAA.all.sd = sd(BAA.all.sum),
BAA.live.mean = mean(BAA.live), BAA.live.sd = sd(BAA.live),
BAA.dead.mean = mean(BAA.dead.sum), BAA.dead.sd = sd(BAA.dead.sum),
BAA.mort.mean = mean(BAA.mort), BAA.mort.sd = sd(BAA.mort), count = n(),
live.count = sum(live), dead.count = sum(dead))
aov.all <- aov(data = all.forest.plot, BAA.all.sum ~ time.period * sequence)
summary(aov.all)
#Tukey HSD
all.tHSD <- TukeyHSD(aov.all)
#Combine Tukey HSD values
all.tHSD.combine <- list(dead.tHSD, #mort.tHSD,
all.tHSD)
#Create a data frame
df.all.tHSD <- as.data.frame(map_df(all.tHSD.combine, tidy))
#Add a column with variable labels.
df.all.tHSD$variable <- c('Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)',
# 'Mortality (%)', 'Mortality (%)', 'Mortality (%)', 'Mortality (%)', 'Mortality (%)', 'Mortality (%)', 'Mortality (%)', 'Mortality (%)',
'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)')
#Add Estimate 1 for Tukey HSD test
#Finish updating
df.all.tHSD$estimate.1 <- c(
#Mortality
mean((all.forest.plot %>% filter(time.period == '2012-2015'))$BAA.dead.sum), mean((all.forest.plot %>% filter( sequence == 'Both Droughts'))$BAA.dead.sum),
mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum),
#Basal Area
mean((all.forest.plot %>% filter(time.period == '2012-2015'))$BAA.all.sum), mean((all.forest.plot %>% filter(sequence == 'Both Droughts'))$BAA.all.sum),
mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum),
mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum),
mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum)
)
#Add Estimate 2 for Tukey HSD test
df.all.tHSD$estimate.2 <- c(#Mortality
mean((all.forest.plot %>% filter(time.period == '1999-2002'))$BAA.dead.sum), mean((all.forest.plot %>% filter(sequence == '2nd Drought Only'))$BAA.dead.sum),
mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum),
mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum),
mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
#Basal Area
mean((all.forest.plot %>% filter(time.period == '1999-2002'))$BAA.all.sum), mean((all.forest.plot %>% filter(sequence == '2nd Drought Only'))$BAA.all.sum),
mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum),
mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum),
mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum)
)
#Select variables and put them in order
df.all.tHSD.label <- df.all.tHSD %>% dplyr::select(variable, contrast, estimate.1, estimate.2, estimate, conf.low, conf.high, adj.p.value) #, method, alternative)
#Change the column names
colnames(df.all.tHSD.label) <- c('Variable', 'Comparison', 'Estimate 1', 'Estimate 2', 'Difference', 'Low 95% CI', 'High 95% CI', 'p-value')
df.all.tHSD.label
#Combined ANOVA and Tukey HSD table
tb1 <- kbl(df.all.tHSD.label, format = 'html', caption = "Table S3: FIA ANOVA and Tukey HSD Results", escape = F, digits = 3) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb1, width = 10, file = "STable3_FIA_tHSD_test_results.png", zoom = 5.0)
#Calculate the precentage changes based on the Tukey HSD test
df.all.tHSD$diff.pct <- df.all.tHSD$estimate / df.all.tHSD$estimate.2 * 100
df.all.tHSD$low.pct <- df.all.tHSD$conf.low / df.all.tHSD$estimate.2 * 100
df.all.tHSD$high.pct <- df.all.tHSD$conf.high / df.all.tHSD$estimate.2 * 100
#Select variables and put them in order
df.all.tHSD.sup <- df.all.tHSD %>% dplyr::select(variable, contrast, estimate.1, estimate.2, estimate, conf.low, conf.high, diff.pct, low.pct, high.pct, adj.p.value) #, method, alternative)
#Change the column names
colnames(df.all.tHSD.sup) <- c('Variable', 'Comparison', 'Estimate 1', 'Estimate 2', 'Difference', 'Low 95% CI', 'High 95% CI', 'Difference (%)', 'Low (%)', 'High (%)', 'p-value')
#Combined ANOVA and Tukey HSD table. This is the same data table as Sup Table 3, but with percentage changes. It is not included with the manuscript.
tb2 <- kbl(df.all.tHSD.sup, format = 'html', caption = "Table S7: Field ANOVA and Tukey HSD Results", escape = F, digits = 3) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb2, width = 10, file = "STable7_FIA_tHSD_test_results.png", zoom = 5.0)
#Summary statistics for all the data
tb3 <- conifer.forest.all.summary %>% dplyr::select("time.period", "sequence", "count", "live.count", "dead.count", "BAA.all.mean", "BAA.all.sd",
"BAA.live.mean", "BAA.live.sd", "BAA.dead.mean", "BAA.dead.sd") %>%
kbl(caption = "Table S9: FIA Overall Summary Statistics") %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb3, width = 5, file = "STable8_Southern_California_mortality_summary_statistics_v1.png", zoom = 4.0)
#Save summary statistics by tree species. This data table is not included with the manuscript
tb4 <- conifer.forest.type.summary %>% dplyr::select("tree_type", "time.period", "sequence", "count", "live.count", "dead.count", "BAA.all.mean", "BAA.all.sd",
"BAA.live.mean", "BAA.live.sd", "BAA.dead.mean", "BAA.dead.sd") %>%
kbl(caption = "Table S10: FIA Tree Species Summary Statistics") %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb4, width = 5, file = "STable9_Southern_California_mortality_summary_statistics_v1.png", zoom = 4.0)
#Analayis by Tree Speices
#ANOVA and Tukey HSD for basal are die-off by forest type, sequence, ane time period
type.aov.all <- aov(data = all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine', 'oak', 'fir', 'juniper', 'cedar')), BAA.all.sum ~ time.period * sequence * tree_type)
summary(type.aov.all)
type.all.tHSD <- TukeyHSD(type.aov.all)
type.all.tHSD
#ANOVA and Tukey HSD for basal are die-off by forest type, sequence, ane time period
type.aov.dead <- aov(data = all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine', 'oak', 'fir', 'juniper', 'cedar')), BAA.dead.sum ~ time.period * sequence * tree_type)
summary(type.aov.dead)
type.dead.tHSD <- TukeyHSD(type.aov.dead)
type.dead.tHSD
#For the broad species analysis
#Combine Tukey HSD values
type.tHSD.combine <- list(type.dead.tHSD, #type.basal.dead.tHSD,
type.all.tHSD)
#Create a data frame
df.type.tHSD <- as.data.frame(map_df(type.tHSD.combine, tidy))
print(df.type.tHSD)
#Add a column with variable labels.
# df.type.tHSD$variable <- c('Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)',
#
#                           'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)')
#Add a variable column
df.type.tHSD.1 <- df.type.tHSD %>% slice(1:298) %>% mutate(variable = 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)')
df.type.tHSD.2 <- df.type.tHSD %>% slice(299:596) %>% mutate(variable = 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)')
df.type.tHSD.combine <- rbind(df.type.tHSD.1, df.type.tHSD.2)
#Add Estimate 1 for Tukey HSD test
#Finish updating
# df.all.tHSD.combine$estimate.1 <- c(#Mortality
#   mean((all.forest.plot %>% filter(time.period == '2012-2015'))$BAA.dead.sum), mean((all.forest.plot %>% filter( sequence == 'Both Droughts'))$BAA.dead.sum),
#   mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
#   mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
#   mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum),
#   #Basal Area
#   mean((all.forest.plot %>% filter(time.period == '2012-2015'))$BAA.all.sum), mean((all.forest.plot %>% filter(sequence == 'Both Droughts'))$BAA.all.sum),
#   mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum),
#   mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum),
#   mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum)
# )
#
# #Add Estimate 2 for Tukey HSD test
# df.all.tHSD.combine$estimate.2 <- c(#Mortality
#   mean((all.forest.plot %>% filter(time.period == '1999-2002'))$BAA.dead.sum), mean((all.forest.plot %>% filter(sequence == '2nd Drought Only'))$BAA.dead.sum),
#   mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum),
#   mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum),
#   mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
#   #Basal Area
#   mean((all.forest.plot %>% filter(time.period == '1999-2002'))$BAA.all.sum), mean((all.forest.plot %>% filter(sequence == '2nd Drought Only'))$BAA.all.sum),
#   mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum),
#   mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum),
#   mean((all.forest.plot %>% filter(time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.plot %>% filter(time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum)
# )
#Select variables and put them in order
df.type.tHSD.label <- df.type.tHSD.combine %>% dplyr::select(variable, contrast, #estimate.1, estimate.2,
estimate, conf.low, conf.high, adj.p.value) #, method, alternative)
#Change the column names
colnames(df.type.tHSD.label) <- c('Variable', 'Comparison', #'Estimate 1', 'Estimate 2',
'Difference', 'Low 95% CI', 'High 95% CI', 'p-value')
#Combined ANOVA and Tukey HSD table
tb5 <- kbl(df.type.tHSD.label, format = 'html', caption = "Table S10: FIA ANOVA and Tukey HSD Results by Species Group", escape = F, digits = 3) %>% kable_classic_2(font_size = 14, full_width = F)
tb5
as_image(x = tb5, width = 10, file = "STable10_FIA_tHSD_test_results_species.png", zoom = 5.0)
#Analayis by Just Pine trees
#ANOVA and Tukey HSD for basal are die-off by forest type, sequence, ane time period
pine.aov.all <- aov(data = all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine')), BAA.all.sum ~ time.period * sequence)
pine.all.tHSD <- TukeyHSD(pine.aov.all)
#ANOVA and Tukey HSD for basal are die-off by forest type, sequence, ane time period
pine.aov.dead <- aov(data = all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine')), BAA.dead.sum ~ time.period * sequence)
pine.dead.tHSD <- TukeyHSD(pine.aov.dead)
#For the broad species analysis
#Combine Tukey HSD values
pine.tHSD.combine <- list(pine.dead.tHSD, #type.basal.dead.tHSD,
pine.all.tHSD)
#Create a data frame
df.pine.tHSD <- as.data.frame(map_df(pine.tHSD.combine, tidy))
#Add a column with variable labels.
df.pine.tHSD$variable <- c('Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)',
'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)')
#Finish updating
df.pine.tHSD$estimate.1 <- c(#Mortality
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & sequence == 'Both Droughts'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum),
#Basal Area
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & sequence == 'Both Droughts'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum)
)
#Add Estimate 2 for Tukey HSD test
df.pine.tHSD$estimate.2 <- c(#Mortality
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & sequence == '2nd Drought Only'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
#Basal Area
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & sequence == '2nd Drought Only'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('pine') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum)
)
#Select variables and put them in order
df.pine.tHSD.label <- df.pine.tHSD %>% dplyr::select(variable, contrast, estimate.1, estimate.2,
estimate, conf.low, conf.high, adj.p.value) #, method, alternative)
#Change the column names
colnames(df.pine.tHSD.label) <- c('Variable', 'Comparison', 'Estimate 1', 'Estimate 2',
'Difference', 'Low 95% CI', 'High 95% CI', 'p-value')
#Combined ANOVA and Tukey HSD table
tb6 <- kbl(df.pine.tHSD.label, format = 'html', caption = "Table S5: Pine Tree FIA ANOVA and Tukey HSD Results", escape = F, digits = 3) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb6, width = 10, file = "STable11_FIA_tHSD_test_results_pine.png", zoom = 5.0)
#Calculate the precentage changes based on the Tukey HSD test
df.pine.tHSD$diff.pct <- df.pine.tHSD$estimate / df.pine.tHSD$estimate.2 * 100
df.pine.tHSD$low.pct <- df.pine.tHSD$conf.low / df.pine.tHSD$estimate.2 * 100
df.pine.tHSD$high.pct <- df.pine.tHSD$conf.high / df.pine.tHSD$estimate.2 * 100
#Select variables and put them in order
df.pine.tHSD.sup <- df.pine.tHSD %>% dplyr::select(variable, contrast, estimate.1, estimate.2, estimate, conf.low, conf.high, diff.pct, low.pct, high.pct, adj.p.value) #, method, alternative)
#Change the column names
colnames(df.pine.tHSD.sup) <- c('Variable', 'Comparison', 'Estimate 1', 'Estimate 2', 'Difference', 'Low 95% CI', 'High 95% CI', 'Difference (%)', 'Low (%)', 'High (%)', 'p-value')
#Combined ANOVA and Tukey HSD table. This is the same data table as Sup Table 5, but with percentage changes. It is not included with the manuscript.
tb7 <- kbl(df.pine.tHSD.sup, format = 'html', caption = "Table S12: FIA ANOVA and Tukey HSD Results for Pines", escape = F, digits = 3) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb7, width = 10, file = "STable12_FIA_tHSD_test_results_pine.png", zoom = 5.0)
#Analysis Just for Firs
fir.aov.all <- aov(data = all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir')), BAA.all.sum ~ time.period * sequence)
fir.all.tHSD <- TukeyHSD(fir.aov.all)
#ANOVA and Tukey HSD for basal are die-off by forest type, sequence, ane time period
fir.aov.dead <- aov(data = all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir')), BAA.dead.sum ~ time.period * sequence)
fir.dead.tHSD <- TukeyHSD(fir.aov.dead)
#For the broad species analysis
#Combine Tukey HSD values
fir.tHSD.combine <- list(fir.dead.tHSD, #type.basal.dead.tHSD,
fir.all.tHSD)
#Create a data frame
df.fir.tHSD <- as.data.frame(map_df(fir.tHSD.combine, tidy))
#Add a column with variable labels.
df.fir.tHSD$variable <- c('Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)', 'Mortality (m<sup>2</sup> ha<sup>-1</sup>)',
'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)', 'Basal Area (m<sup>2</sup> ha<sup>-1</sup>)')
#Add Estimate 1 for Tukey HSD test
#Finish updating
df.fir.tHSD$estimate.1 <- c(#Mortality
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & sequence == 'Both Droughts'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.dead.sum),
#Basal Area
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & sequence == 'Both Droughts'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == 'Both Droughts'))$BAA.all.sum)
)
#Add Estimate 2 for Tukey HSD test
df.fir.tHSD$estimate.2 <- c(#Mortality
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & sequence == '2nd Drought Only'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.dead.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.dead.sum),
#Basal Area
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & sequence == '2nd Drought Only'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum),
mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '2012-2015' & sequence == '2nd Drought Only'))$BAA.all.sum), mean((all.forest.type %>% filter(pltID %in% plots & tree_type %in% c('fir') & time.period == '1999-2002' & sequence == 'Both Droughts'))$BAA.all.sum)
)
#Select variables and put them in order
df.fir.tHSD.label <- df.fir.tHSD %>% dplyr::select(variable, contrast, estimate.1, estimate.2,
estimate, conf.low, conf.high, adj.p.value) #, method, alternative)
#Change the column names
colnames(df.fir.tHSD.label) <- c('Variable', 'Comparison', 'Estimate 1', 'Estimate 2',
'Difference', 'Low 95% CI', 'High 95% CI', 'p-value')
#Combined ANOVA and Tukey HSD table
tb8 <- kbl(df.fir.tHSD.label, format = 'html', caption = "Table S6: Fir Tree FIA ANOVA and Tukey HSD Results", escape = F, digits = 3) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb8, width = 10, file = "STable13_FIA_tHSD_test_results_fir.png", zoom = 5.0)
#Calculate the precentage changes based on the Tukey HSD test
df.fir.tHSD$diff.pct <- df.fir.tHSD$estimate / df.fir.tHSD$estimate.2 * 100
df.fir.tHSD$low.pct <- df.fir.tHSD$conf.low / df.fir.tHSD$estimate.2 * 100
df.fir.tHSD$high.pct <- df.fir.tHSD$conf.high / df.fir.tHSD$estimate.2 * 100
#Select variables and put them in order
df.fir.tHSD.sup <- df.fir.tHSD %>% dplyr::select(variable, contrast, estimate.1, estimate.2, estimate, conf.low, conf.high, diff.pct, low.pct, high.pct, adj.p.value) #, method, alternative)
#Change the column names
colnames(df.fir.tHSD.sup) <- c('Variable', 'Comparison', 'Estimate 1', 'Estimate 2', 'Difference', 'Low 95% CI', 'High 95% CI', 'Difference (%)', 'Low (%)', 'High (%)', 'p-value')
#Combined ANOVA and Tukey HSD table. This is the same data table as Sup Table 3, but with percentage changes. It is not included with the manuscript.
tb9 <- kbl(df.fir.tHSD.sup, format = 'html', caption = "Table S14: FIA ANOVA and Tukey HSD Results for Firs", escape = F, digits = 3) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb9, width = 10, file = "STable14_FIA_tHSD_test_results_fir.png", zoom = 5.0)
