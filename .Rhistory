q()
remove.packages('terra')
.libPaths
.libPaths()
remove.packages('terra', "C:/Users/can02/AppData/Local/Programs/R-4.0.2/library")
#Set up a python environment
# ee_install(py_env = "rgee")
library('rgee')
#Initialize Google Earth Engine
ee_Initialize(user = 'cnorlen@uci.edu', drive = TRUE)
p <- c('rgee', 'terra', 'sf')
# install.packages(p,repo='https://cran.r-project.org/')
# install.packages(c('ggmap'),repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
#Intialize RGEE
ee_Initialize(user = 'cnorlen@uci.edu', drive = 'TRUE')
srtm <- ee$Image("USGS/SRTMGL1_003")
#Intialize RGEE
ee_Initialize(user = 'cnorlen@uci.edu')
srtm <- ee$Image("USGS/SRTMGL1_003")
viz <- list(
max = 4000,
min = 0,
palette = c("#000000","#5AAD5A","#A9AD84","#FFFFFF")
)
Map$addLayer(
eeObject = srtm,
visParams =  viz,
name = 'SRTM',
legend = TRUE
)
Map$addLayer(
eeObject = srtm,
visParams =  viz,
name = 'SRTM'
)
ee_check()
ee_check_python()
ee_check_credentials()
ee_Initialize(user='cnorlen@uci.edu', drive = TRUE)
email <- "cnorlen@uci.edu"
oauth_func_path <- system.file("python/ee_utils.py", package = "rgee")
utils_py <- rgee:::ee_source_python(oauth_func_path)
ee_path <- ee_utils_py_to_r(utils_py$ee_path())
email_clean <- gsub("@gmail.com", "", email)
ee_path_user <- sprintf("%s/%s", ee_path, email_clean)
print(ee_path_user)
# Is there some Google Drive Token in this Folder?
full_credentials <- list.files(path = ee_path_user, full.names = TRUE)
drive_condition <- grepl(".*_.*@.*", basename(full_credentials))
googledrive::drive_auth(
email = NULL,
cache = ee_path_user
)
full_credentials
drive_condition
email <- "cnorlen@uci.edu"
oauth_func_path <- system.file("python/ee_utils.py", package = "rgee")
utils_py <- rgee:::ee_source_python(oauth_func_path)
ee_path <- ee_utils_py_to_r(utils_py$ee_path())
email_clean <- gsub("@gmail.com", "", email)
ee_path_user <- sprintf("%s/%s", ee_path, email_clean)
# Is there some Google Drive Token in this Folder?
full_credentials <- list.files(path = ee_path_user, full.names = TRUE)
drive_condition <- grepl(".*_.*@.*", basename(full_credentials))
drive_credentials <- full_credentials[drive_condition]
email <- sub("^[^_]*_", "", basename(drive_credentials))
print(ee_path_user)
print(email)
ee_clean_credentials("cnorlen@uci.edu")
ee_Initialize("cnorlen")
ee_Initialize("cnorlen", drive = TRUE)
googledrive::drive_auth(email="cnorlen@uci.edu")
gargle_oauth_email = "cnorlen@uci.edu"
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
library(googledrive)
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
googledrive::drive_auth(email= "cnorlen@uci.edu")
ee_check_credentials()
ee_Initialize(drive = TRUE)
library(Rcpp)
install.packages('Rcpp',repo='https://cran.r-project.org/')
install.packages("Rcpp", repo = "https://cran.r-project.org/")
library(Rcpp)
install.packages('httpuv',repo='https://cran.r-project.org/')
library(httpuv)
ee_Initialize(drive = TRUE)
library(rgee)
ee_Initialize(drive = TRUE)
p <- c('dplyr','tidyr','ggplot2','ggpubr','segmented', 'patchwork','RColorBrewer','gt', 'gtsummary',
'webshot', 'kableExtra', 'broom', 'ggpmisc', 'relaimpo', 'mlr', 'caret', 'stats', 'purrr',
'nlme')
#Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
setwd('C:/Users/can02/mystuff/subsequent-drought')
#Increase the memory limit for R. Helps with spatially explicit analyses.
memory.limit(32000)
#Read in csv data for Regression Data Sets
dir_in <- "D:\\Large_Files\\Landsat"
# all.ca <- read.csv(file.path(dir_in, "Regression_all_socal_300m_v23.csv"))
all.ca <- read.csv(file.path(dir_in, "Regression_all_socal_300m_v23_v3.csv"))
# summary(all.ca)
# summary(all.ca.test)
#Calculate the difference between SPI48 2002 and SPI48 2015
all.ca$dSPI48 <- abs(all.ca$spi48_09_2015 - all.ca$spi48_09_2002)
#Adding a drought sequence column to the data set
all.ca <- all.ca %>% mutate(drought.sequence = case_when((spi48_09_2002 <= -1.5) & (spi48_09_2015 <= -1.5) & (dSPI48 <= 0.5) ~ 'Both Droughts',
(spi48_09_2015 <= -1.5) & (spi48_09_2002 > spi48_09_2015) & (spi48_09_2002 > -1.5) & (dSPI48 > 0.5) ~ '2nd Drought Only',
(spi48_09_2002) <= -1.5 & (spi48_09_2002 < spi48_09_2015) & (spi48_09_2015 > -1.5) & (dSPI48 > 0.5) ~ '1st Drought Only'))
#Check if PET_4yr_2009 is postive or negative
all.ca %>% filter(drought.sequence == 'Both Droughts') %>% dplyr::select(PET_4yr_2009, PET_4yr_2002, PET_4yr_2015) %>%
summarize(PET_2002.mean = mean(PET_4yr_2002), PET_2009.mean = mean(PET_4yr_2009), PET_2015.mean = mean(PET_4yr_2015))
#Select columns of data
all.ca.1stDrought <- dplyr::select(all.ca, c(system.index, dNDMI_2004, PET_4yr_2002, ppt_4yr_2002, tmax_4yr_2002, ET_4yr_2002, biomass_1999, ADS_2004, spi48_09_2002, elevation, latitude, longitude, USFS_zone, drought.sequence))
#Add the year of the 1999-2002 data
all.ca.1stDrought$drought <- '1999-2002'
#Rename the columns
colnames(all.ca.1stDrought) <- c('pixel.id', 'dNDMI', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence', 'drought')
#Select columns of the 2012-2015 data
all.ca.2ndDrought <- dplyr::select(all.ca, c(system.index, dNDMI_2017, PET_4yr_2015, ppt_4yr_2015, tmax_4yr_2015, ET_4yr_2015, biomass_2012, ADS_2017, spi48_09_2015, elevation, latitude, longitude, USFS_zone, drought.sequence))
#Add the year of the 2012-2015 data
all.ca.2ndDrought$drought <- '2012-2015'
#Rename the columns
colnames(all.ca.2ndDrought) <- c('pixel.id', 'dNDMI', 'PET_4yr', 'ppt_4yr', 'tmax_4yr', 'ET_4yr', 'biomass', 'ADS', 'spi48', 'elevation', 'latitude', 'longitude', 'USFS', 'sequence', 'drought')
#Combine all the data in one data frame
all.ca.combined <- rbind(all.ca.1stDrought, all.ca.2ndDrought)
#Translate the region code to text
all.ca.combined$region[all.ca.combined$USFS == 261] <- "Sierra Nevada"
all.ca.combined$region[all.ca.combined$USFS == 262] <- "Southern California"
#Convert the ADS data to categorical mortality or no mortality
#Trying the ADS Categorical with a 3 threshold
all.ca.combined <- all.ca.combined %>% mutate(ADS.cat = case_when(
(ADS) >= 5 ~ 1, #mortality
(ADS) < 5 ~ 0)) #no mortality
#Make drought sequence into dummy categorical variables for statistical analysis
all.ca.sample <- all.ca.combined %>% mutate(sequence.c = case_when(
sequence == 'Both Droughts' ~ 0,
sequence == '2nd Drought Only' ~ 1))
#Make years into dummy variables for statistical analysis
all.ca.sample <- all.ca.sample %>% mutate(drought.c = case_when(
drought == '1999-2002' ~ 0,
drought == '2012-2015' ~ 1))
#Create data sets as factors
all.ca.sample$sequence.f <- as.factor(all.ca.sample$sequence)
all.ca.sample$drought.f <- as.factor(all.ca.sample$drought)
#Select the drought sequence samples and data columns for analysis
dataset <- all.ca.sample %>% dplyr::filter(sequence == 'Both Droughts' | sequence == '2nd Drought Only') %>%
dplyr::select('PET_4yr', 'dNDMI', 'drought.c', 'sequence.c', 'biomass', 'pixel.id', 'tmax_4yr', 'ADS.cat')
#Convert the dummy variables to a numeric format
dataset$sequence.n <- as.numeric(dataset$sequence.c)
dataset$drought.n <- as.numeric(dataset$drought.c)
#Calculate sample size for 1999-2002 and proportion impacted by drought
all.ca.combined %>% dplyr::filter(drought == '1999-2002' & spi48 <= -1.5) %>% count()
all.ca.combined %>% dplyr::filter(drought == '1999-2002' & spi48 <= -1.5) %>% count() / all.ca.combined %>% dplyr::filter(drought == '1999-2002') %>% count()
all.ca.combined %>% dplyr::filter(drought == '1999-2002' & spi48 <= -1.5) %>% count()
#Calculate sample sizes for 2012-2015 and proportion impacted by drought
all.ca.combined %>% dplyr::filter(drought == '2012-2015' & spi48 <= -1.5) %>% count()
all.ca.combined %>% dplyr::filter(drought == '2012-2015' & spi48 <= -1.5) %>% count() / all.ca.combined %>% dplyr::filter(drought == '2012-2015') %>% count()
#Random number seed was not set with published results (e.g., set.seed)
#Convert dummy variables to factors
dataset$sequence.f <- as.factor(dataset$sequence.c)
dataset$drought.f <- as.factor(dataset$drought.c)
dataset.3 <- all.ca.sample %>% arrange(drought.f, pixel.id, by_group = TRUE)
#Combined anova/t-test analysis for Biomass by year collected and drought sequence
biomass.aov <- aov(data = all.ca.sample, biomass ~ drought.f*sequence.f)
#Tukey Post Hoc analysis for biomass
biomass.tHSD <- TukeyHSD(biomass.aov)
#ANOVA for Pr-ET
PET_4yr.aov <- aov(data = all.ca.sample, PET_4yr ~ drought.f*sequence.f)
#Tukey Post Hoc analysis for Pr-ET
PET_4yr.tHSD <- TukeyHSD(PET_4yr.aov)
#ANOVA for Precip
ppt_4yr.aov <- aov(data = all.ca.sample, ppt_4yr ~ drought.f*sequence.f)
#Tukey Post Hoc analysis for Pr-ET
ppt_4yr.tHSD <- TukeyHSD(ppt_4yr.aov)
#ANOVA for ET
ET_4yr.aov <- aov(data = all.ca.sample, ET_4yr ~ drought.f*sequence.f)
#Tukey Post Hoc analysis for ET
ET_4yr.tHSD <- TukeyHSD(ET_4yr.aov)
#ANOVA for Tmax
tmax_4yr.aov <- aov(data = all.ca.sample, tmax_4yr ~ drought.f*sequence.f)
#Tukey Post Hoc analysis for Tmax
tmax_4yr.tHSD <- TukeyHSD(tmax_4yr.aov)
#ANOVA for dNDMI
dNDMI.aov <- aov(data = all.ca.sample, dNDMI ~ drought.f*sequence.f)
#Tukey Post Hoc analysis for dNDMI
dNDMI.tHSD <- TukeyHSD(dNDMI.aov)
#Create a combined a list of Tukey HSD tests
tHSD <- list(biomass.tHSD, dNDMI.tHSD,
PET_4yr.tHSD, tmax_4yr.tHSD)
#Create a data frame of tukey HSD tests
df.tHSD <- as.data.frame(purrr::map_df(tHSD, tidy))
#Create labels for columns in HTML format
df.tHSD$variable <- c('Biomass (Mg ha<sup>-1</sup>)', 'Biomass (Mg ha<sup>-1</sup>)', 'Biomass (Mg ha<sup>-1</sup>)', 'Biomass (Mg ha<sup>-1</sup>)', 'Biomass (Mg ha<sup>-1</sup>)', 'Biomass (Mg ha<sup>-1</sup>)', 'Biomass (Mg ha<sup>-1</sup>)', 'Biomass (Mg ha<sup>-1</sup>)',
'dNDMI', 'dNDMI', 'dNDMI', 'dNDMI', 'dNDMI', 'dNDMI', 'dNDMI', 'dNDMI',
'Pr-ET (mm 4yr<sup>-1</sup>)', 'Pr-ET (mm 4yr<sup>-1</sup>)', 'Pr-ET (mm 4yr<sup>-1</sup>)', 'Pr-ET (mm 4yr<sup>-1</sup>)', 'Pr-ET (mm 4yr<sup>-1</sup>)', 'Pr-ET (mm 4yr<sup>-1</sup>)', 'Pr-ET (mm 4yr<sup>-1</sup>)', 'Pr-ET (mm 4yr<sup>-1</sup>)',
'Temperature (C)', 'Temperature (C)', 'Temperature (C)', 'Temperature (C)', 'Temperature (C)', 'Temperature (C)', 'Temperature (C)', 'Temperature (C)')
summary(all.ca.sample)
#Get the sample size for the two main drought sequences
all.ca.sample %>% filter(sequence == '2nd Drought Only' & drought == '1999-2002') %>% count()
all.ca.sample %>% filter(sequence == 'Both Droughts' & drought == '1999-2002') %>% count()
#Add mean values for Estimate 1
df.tHSD$estimate.1 <- c(#Biomass density
mean((all.ca.sample %>% filter(drought == '2012-2015'))$biomass), mean((all.ca.sample %>% filter(sequence == 'Both Droughts'))$biomass),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$biomass), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$biomass),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$biomass), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$biomass),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$biomass), mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$biomass),
#dNDMI
mean((all.ca.sample %>% filter(drought == '2012-2015'))$dNDMI), mean((all.ca.sample %>% filter(sequence == 'Both Droughts'))$dNDMI),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$dNDMI), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$dNDMI),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$dNDMI), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$dNDMI),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$dNDMI), mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$dNDMI),
#PET 4yr
mean((all.ca.sample %>% filter(drought == '2012-2015'))$PET_4yr), mean((all.ca.sample %>% filter(sequence == 'Both Droughts'))$PET_4yr),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$PET_4yr), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$PET_4yr),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$PET_4yr), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$PET_4yr),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$PET_4yr), mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$PET_4yr),
#Temperature 4yr
mean((all.ca.sample %>% filter(drought == '2012-2015'))$tmax_4yr), mean((all.ca.sample %>% filter(sequence == 'Both Droughts'))$tmax_4yr),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$tmax_4yr), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$tmax_4yr),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$tmax_4yr), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$tmax_4yr),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$tmax_4yr), mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == 'Both Droughts'))$tmax_4yr))
#Add mean values for Estimate 2
df.tHSD$estimate.2 <- c(#Biomass
mean((all.ca.sample %>% filter(drought == '1999-2002'))$biomass), mean((all.ca.sample %>% filter(sequence == '2nd Drought Only'))$biomass),
mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$biomass), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$biomass),
mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$biomass), mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$biomass),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$biomass), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$biomass),
#dNDMI
mean((all.ca.sample %>% filter(drought == '1999-2002'))$dNDMI), mean((all.ca.sample %>% filter(sequence == '2nd Drought Only'))$dNDMI),
mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$dNDMI), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$dNDMI),
mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$dNDMI), mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$dNDMI),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$dNDMI), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$dNDMI),
#PrET 4yr
mean((all.ca.sample %>% filter(drought == '1999-2002'))$PET_4yr), mean((all.ca.sample %>% filter(sequence == '2nd Drought Only'))$PET_4yr),
mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$PET_4yr), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$PET_4yr),
mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$PET_4yr), mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$PET_4yr),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$PET_4yr), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$PET_4yr),
#Tmax 4yr
mean((all.ca.sample %>% filter(drought == '1999-2002'))$tmax_4yr), mean((all.ca.sample %>% filter(sequence == '2nd Drought Only'))$tmax_4yr),
mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$tmax_4yr), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$tmax_4yr),
mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == '2nd Drought Only'))$tmax_4yr), mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$tmax_4yr),
mean((all.ca.sample %>% filter(drought == '2012-2015' & sequence == '2nd Drought Only'))$tmax_4yr), mean((all.ca.sample %>% filter(drought == '1999-2002' & sequence == 'Both Droughts'))$tmax_4yr))
#Select and sort the tukey HSD columns and
df.tHSD.pub <- df.tHSD %>% dplyr::select(variable, contrast, estimate.1, estimate.2, estimate, conf.low, conf.high, adj.p.value)
#Name the columns of the data frame
colnames(df.tHSD.pub) <- c('Variable', 'Comparison', 'Estimate 1', 'Estimate 2','Difference', 'Low 95% CI', 'High 95% CI', 'p-value')
#ANOVA and Tukey HSD comparing by time period and drought sequence
tb1 <- kbl(df.tHSD.pub, format = 'html', caption = "Table S2: ANOVA and Tukey HSD Results", digits = 3, escape = F) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb1, width = 10, file = "STable2_tHSD_test_results.png", zoom = 5.0)
#Create same table as Table 2, but add a percent change column, not included with manuscript
#Calculate proportion differences from Tukey HSD tests
df.tHSD$diff.pct <- df.tHSD$estimate / df.tHSD$estimate.1 * 100
df.tHSD$low.pct <- df.tHSD$conf.low / df.tHSD$estimate.1 * 100
df.tHSD$high.pct <- df.tHSD$conf.high / df.tHSD$estimate.1 * 100
#Select and sort the tukey HSD columns and
df.tHSD.sup <- df.tHSD %>% dplyr::select(variable, contrast, estimate.1, estimate.2, estimate, conf.low, conf.high, diff.pct, high.pct, low.pct, adj.p.value)
#Name the columns of the data frame
colnames(df.tHSD.sup) <- c('Variable', 'Comparison', 'Estimate 1', 'Estimate 2','Difference', 'Low 95% CI', 'High 95% CI', 'Difference (%)', 'Low (%)', 'High (%)', 'p-value')
#ANOVA and Tukey HSD comparing by time period and drought sequence, same as Table S2 plus % changes
tb3 <- kbl(df.tHSD.sup, format = 'html', caption = "Table S13: ANOVA and Tukey HSD Results with Percentages", digits = 3, escape = F) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb3, width = 10, file = "STable13_tHSD_test_results_with_pct.png", zoom = 5.0)
#Filtering by drought sequence
summary(all.ca)
all.ca.both <- all.ca %>% dplyr::filter(drought.sequence == 'Both Droughts')
all.ca.2015 <- all.ca %>% dplyr::filter(drought.sequence == '2nd Drought Only')
#Paired t-tests for Geo-spatial data sets
#Biomass
biomass.both.t <- t.test(data = all.ca.both, x = all.ca.both$biomass_1999, y = all.ca.both$biomass_2012, paired = TRUE)
biomass.2015.t <- t.test(data = all.ca.2015, x = all.ca.2015$biomass_1999, y = all.ca.2015$biomass_2012, paired = TRUE)
#four-year Pr-ET
PET_4yr.both.t <- t.test(data = all.ca.both, x = all.ca.both$PET_4yr_2002, y = all.ca.both$PET_4yr_2015, paired = TRUE)
PET_4yr.2015.t <- t.test(data = all.ca.2015, x = all.ca.2015$PET_4yr_2002, y = all.ca.2015$PET_4yr_2015, paired = TRUE)
#four-year Precip
ppt_4yr.both.t <- t.test(data = all.ca.both, x = all.ca.both$ppt_4yr_2002, y = all.ca.both$ppt_4yr_2015, paired = TRUE)
ppt_4yr.2015.t <- t.test(data = all.ca.2015, x = all.ca.2015$ppt_4yr_2002, y = all.ca.2015$ppt_4yr_2015, paired = TRUE)
#four-year ET
ET_4yr.both.t <- t.test(data = all.ca.both, x = all.ca.both$ET_4yr_2002, y = all.ca.both$ET_4yr_2015, paired = TRUE)
ET_4yr.2015.t <- t.test(data = all.ca.2015, x = all.ca.2015$ET_4yr_2002, y = all.ca.2015$ET_4yr_2015, paired = TRUE)
#four-year Tmax
tmax_4yr.both.t <- t.test(data = all.ca.both, x = all.ca.both$tmax_4yr_2002, y = all.ca.both$tmax_4yr_2015, paired = TRUE)
tmax_4yr.2015.t <- t.test(data = all.ca.2015, x = all.ca.2015$tmax_4yr_2002, y = all.ca.2015$tmax_4yr_2015, paired = TRUE)
#dNDMI
dNDMI.both.t <- t.test(data = all.ca.both, x = all.ca.both$dNDMI_2004, y = all.ca.both$dNDMI_2017, paired = TRUE)
dNDMI.2015.t <- t.test(data = all.ca.2015, x = all.ca.2015$dNDMI_2004, y = all.ca.2015$dNDMI_2017, paired = TRUE)
#Combine all the t-test results in a list
t <- list(biomass.both.t, biomass.2015.t, dNDMI.both.t, dNDMI.2015.t,
PET_4yr.both.t, PET_4yr.2015.t, tmax_4yr.both.t, tmax_4yr.2015.t)
#Combine the t-test results in a data frame
df.t <- as.data.frame(purrr::map_df(t, tidy))
#Add a variable label column
df.t$variable <- c('Biomass (Mg ha<sup>-1</sup>)','Biomass (Mg ha<sup>-1</sup>)','dNDMI','dNDMI',
'Pr-ET (mm 4yr<sup>-1</sup>)','Pr-ET (mm 4yr<sup>-1</sup>)','Temperature (C)','Temperature (C)')
#Add a drought sequence column
df.t$sequence <- c('Both Droughts', '2nd Drougth Only', 'Both Droughts', '2nd Drougth Only',
'Both Droughts', '2nd Drougth Only','Both Droughts', '2nd Drougth Only')
#Add mean values for 1999-2002
df.t$value.1999 <- c(mean(all.ca.both$biomass_1999), mean(all.ca.2015$biomass_1999), mean(all.ca.both$dNDMI_2004), mean(all.ca.2015$dNDMI_2004),
mean(all.ca.both$PET_4yr_2002), mean(all.ca.2015$PET_4yr_2002), mean(all.ca.both$tmax_4yr_2002), mean(all.ca.2015$tmax_4yr_2002))
#Add mean values for 2012-2015
df.t$value.2012 <- c(mean(all.ca.both$biomass_2012), mean(all.ca.2015$biomass_2012), mean(all.ca.both$dNDMI_2017), mean(all.ca.2015$dNDMI_2017),
mean(all.ca.both$PET_4yr_2015), mean(all.ca.2015$PET_4yr_2015), mean(all.ca.both$tmax_4yr_2015), mean(all.ca.2015$tmax_4yr_2015))
#Select columns and put them in order
df.t.label <- df.t %>% dplyr::select(variable, sequence, value.1999, value.2012, estimate, conf.low, conf.high, statistic, p.value)
#Give the different columns names
colnames(df.t.label) <- c('Variable','Drought Sequence', 'Estimate 1', 'Estimate 2', 'Difference', 'Low 95% CI', 'High 95% CI', 't', 'p-value')
#Paired T-test table
tb2 <- kbl(df.t.label, format = 'html', caption = "Table S1: Paired two-tailed T-Test Results", escape = F, digits = 3) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb2, width = 10, file = "STable1_paired_t_test_results.png", zoom = 5.0)
#Create table that is the same as Table 2, but has percent change column. Not included with manuscript
#Calculate percent differences for paired t-tests
df.t$diff.pct <- df.t$estimate / df.t$value.1999 * 100
df.t$low.pct <- df.t$conf.low / df.t$value.1999 * 100
df.t$high.pct <- df.t$conf.high / df.t$value.1999 * 100
#Select columns
df.t.sup <- df.t %>% dplyr::select(variable, sequence, value.1999, value.2012, estimate, conf.low, conf.high, diff.pct, low.pct, high.pct, statistic, p.value, parameter)
#Give the different columns names
colnames(df.t.sup) <- c('Variable','Drought Sequence', 'Estimate 1', 'Estimate 2', 'Difference', 'Low 95% CI', 'High 95% CI', 'Difference (%)', 'Low (%)', 'High (%)', 't', 'p-value', 'df (n-1)')
#Paired T-test table
tb4 <- kbl(df.t.sup, format = 'html', caption = "Table S8: Paired two-tailed T-Test Results with Percentages", escape = F, digits = 3) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb4, width = 10, file = "STable8_t_test_results_with_pct.png", zoom = 5.0)
#Select out ADS die-off data for chi-square test
ADS.1999.both.alive <- all.ca.sample %>% dplyr::filter(sequence == 'Both Droughts' & drought == '1999-2002' & ADS.cat == 0) %>% count()
ADS.1999.both.alive
ADS.1999.both.dead <- all.ca.sample %>% dplyr::filter(sequence == 'Both Droughts' & drought == '1999-2002' & ADS.cat == 1) %>% count()
ADS.1999.both.dead
ADS.2015.both.alive <- all.ca.sample %>% dplyr::filter(sequence == 'Both Droughts' & drought == '2012-2015' & ADS.cat == 0) %>% count()
ADS.2015.both.alive
ADS.2015.both.dead <- all.ca.sample %>% dplyr::filter(sequence == 'Both Droughts' & drought == '2012-2015' & ADS.cat == 1) %>% count()
ADS.2015.both.dead
ADS.1999.second.alive <- all.ca.sample %>% dplyr::filter(sequence == '2nd Drought Only' & drought == '1999-2002' & ADS.cat == 0) %>% count()
ADS.1999.second.alive
ADS.1999.second.dead <- all.ca.sample %>% dplyr::filter(sequence == '2nd Drought Only' & drought == '1999-2002' & ADS.cat == 1) %>% count()
ADS.1999.second.dead
ADS.2015.second.alive <- all.ca.sample %>% dplyr::filter(sequence == '2nd Drought Only' & drought == '2012-2015' & ADS.cat == 0) %>% count()
ADS.2015.second.alive
ADS.2015.second.dead <- all.ca.sample %>% dplyr::filter(sequence == '2nd Drought Only' & drought == '2012-2015' & ADS.cat == 1) %>% count()
ADS.2015.second.dead
#Create a frequency matrix for a chi-square test
ADS <- matrix(c(as.numeric(ADS.1999.both.dead), as.numeric(ADS.2015.both.dead), as.numeric(ADS.1999.second.dead), as.numeric(ADS.2015.second.dead),
as.numeric(ADS.1999.both.alive), as.numeric(ADS.2015.both.alive), as.numeric(ADS.1999.second.alive), as.numeric(ADS.2015.second.alive)), ncol=2)
#Give the matrix column and row names
colnames(ADS) <- c("Mortality", "No Mortality")
rownames(ADS) <- c('Both Droughts: 1999-2002', 'Both Droughts: 2012-2015', '2nd Drought Only: 1999-2002','2nd Drought Only: 2012-2015')
#Convert the matrix to a data frame
ADS <- as.data.frame(ADS)
ADS
#Do the chi-squared test
mychi <- chisq.test(ADS)
#Print the results of the chi-square
mychi
#Print the expected result if there is no association
mychi$expected
#Calculate proportion of ADS mortality and no mortality by drought sequence and time period
#2012-2015 Only sample in 1999-2002
second.2002 <- all.ca.sample %>% filter(sequence == '2nd Drought Only' & drought == '1999-2002') %>% dplyr::select(ADS.cat) %>% sum()
second.2002.total <- all.ca.sample %>% filter(sequence == '2nd Drought Only' & drought == '1999-2002') %>% dplyr::select(ADS.cat) %>% count()
second.2002 / second.2002.total
#2nd Drought Only sample in 2012-2015
second.2015 <- all.ca.sample %>% filter(sequence == '2nd Drought Only' & drought == '2012-2015') %>% dplyr::select(ADS.cat) %>% sum()
second.2015.total <- all.ca.sample %>% filter(sequence == '2nd Drought Only' & drought == '2012-2015') %>% dplyr::select(ADS.cat) %>% count()
second.2015 / second.2015.total
#Both Droughts sample in 1999-2002
both.2002 <- all.ca.sample %>% filter(sequence == 'Both Droughts' & drought == '1999-2002') %>% dplyr::select(ADS.cat) %>% sum()
both.2002.total <- all.ca.sample %>% filter(sequence == 'Both Droughts' & drought == '1999-2002') %>% dplyr::select(ADS.cat) %>% count()
both.2002 / both.2002.total
#Both Droughts sample in 2012-2015
both.2015 <- all.ca.sample %>% filter(sequence == 'Both Droughts' & drought == '2012-2015') %>% dplyr::select(ADS.cat) %>% sum()
both.2015.total <- all.ca.sample %>% filter(sequence == 'Both Droughts' & drought == '2012-2015') %>% dplyr::select(ADS.cat) %>% count()
both.2015 / both.2015.total
